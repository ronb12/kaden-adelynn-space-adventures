{"ast":null,"code":"// Enhanced Adelynn Character Sprite - Professional Animated Design\n// Based on: Young female tactical engineer, early 20s, calm and focused,\n// long silver braid, dark purple flight jacket with glowing pink circuitry patterns,\n// holographic wrist console\n\nexport const AdelynnSprite = {\n  name: \"Adelynn\",\n  age: \"early 20s\",\n  description: \"Calm and focused tactical engineer with futuristic sci-fi design\",\n  // Character Design Specifications\n  design: {\n    hair: {\n      color: \"#C0C0C0\",\n      // Silver\n      style: \"long braid\",\n      highlights: \"#E0E0E0\" // Light silver highlights\n    },\n    flightJacket: {\n      primary: \"#4A148C\",\n      // Dark purple\n      circuitry: \"#FF1493\",\n      // Glowing pink circuitry patterns\n      style: \"tactical engineer jacket\"\n    },\n    wristConsole: {\n      color: \"#00FFFF\",\n      // Cyan holographic\n      effect: \"holographic projections\",\n      style: \"advanced tech interface\"\n    },\n    expression: \"calm and focused\",\n    stance: \"professional, slightly analytical\"\n  },\n  // Animation States\n  animations: {\n    idle: {\n      description: \"Soft idle loop with hair sway and blinking lights on wrist console\",\n      frames: [{\n        name: \"idle_1\",\n        description: \"Neutral position with subtle hair movement\",\n        hairSway: 0,\n        consoleBlink: 1.0,\n        bodyLean: 0\n      }, {\n        name: \"idle_2\",\n        description: \"Hair swaying slightly, console lights dimming\",\n        hairSway: 2,\n        consoleBlink: 0.7,\n        bodyLean: 1\n      }, {\n        name: \"idle_3\",\n        description: \"Hair returning to center, console brightening\",\n        hairSway: -1,\n        consoleBlink: 1.2,\n        bodyLean: 0\n      }, {\n        name: \"idle_4\",\n        description: \"Gentle hair movement, console pulsing\",\n        hairSway: 1,\n        consoleBlink: 0.8,\n        bodyLean: -1\n      }]\n    },\n    droneDeploy: {\n      description: \"Adelynn deploying a small holographic drone\",\n      frames: [{\n        name: \"deploy_1\",\n        description: \"Raising wrist console to deploy drone\",\n        hairSway: 0,\n        consoleBlink: 2.0,\n        bodyLean: 3,\n        droneVisible: false\n      }, {\n        name: \"deploy_2\",\n        description: \"Drone materializing from holographic projection\",\n        hairSway: 1,\n        consoleBlink: 1.5,\n        bodyLean: 5,\n        droneVisible: true\n      }, {\n        name: \"deploy_3\",\n        description: \"Drone fully deployed and hovering\",\n        hairSway: 0,\n        consoleBlink: 1.0,\n        bodyLean: 2,\n        droneVisible: true\n      }]\n    },\n    consoleTap: {\n      description: \"Adelynn tapping her wrist console with glowing HUD projections\",\n      frames: [{\n        name: \"tap_1\",\n        description: \"Bringing wrist console to attention\",\n        hairSway: 0,\n        consoleBlink: 1.5,\n        bodyLean: 2,\n        hudVisible: false\n      }, {\n        name: \"tap_2\",\n        description: \"Tapping console, HUD projections appearing\",\n        hairSway: 1,\n        consoleBlink: 2.0,\n        bodyLean: 3,\n        hudVisible: true\n      }, {\n        name: \"tap_3\",\n        description: \"HUD fully projected, analyzing data\",\n        hairSway: 0,\n        consoleBlink: 1.8,\n        bodyLean: 2,\n        hudVisible: true\n      }]\n    }\n  },\n  // Sprite Rendering Data (1024x1024 resolution)\n  spriteData: {\n    width: 1024,\n    height: 1024,\n    // Character proportions (center-based)\n    proportions: {\n      head: {\n        width: 180,\n        height: 220,\n        x: 512,\n        y: 200\n      },\n      body: {\n        width: 280,\n        height: 380,\n        x: 512,\n        y: 450\n      },\n      arms: {\n        width: 70,\n        height: 180,\n        x: 400,\n        y: 500\n      },\n      legs: {\n        width: 100,\n        height: 280,\n        x: 480,\n        y: 650\n      },\n      hair: {\n        width: 200,\n        height: 400,\n        x: 512,\n        y: 180\n      },\n      console: {\n        width: 80,\n        height: 60,\n        x: 420,\n        y: 550\n      }\n    },\n    // Color palette\n    colors: {\n      skin: \"#FFDBAC\",\n      hair: \"#C0C0C0\",\n      hairHighlights: \"#E0E0E0\",\n      flightJacket: \"#4A148C\",\n      circuitry: \"#FF1493\",\n      wristConsole: \"#00FFFF\",\n      consoleGlow: \"#00FFFF\",\n      eyes: \"#9370DB\",\n      mouth: \"#FF69B4\",\n      drone: \"#00FFFF\",\n      hud: \"#00FFFF\"\n    }\n  }\n};\n\n// Advanced Sprite Renderer for Adelynn\nexport class AdelynnSpriteRenderer {\n  constructor() {\n    this.currentFrame = 0;\n    this.animationSpeed = 120; // milliseconds per frame\n    this.lastUpdate = 0;\n  }\n\n  // Render Adelynn with animation\n  renderAdelynn(ctx, x, y, animation = 'idle', timestamp = 0) {\n    const animationData = AdelynnSprite.animations[animation];\n    if (!animationData) return;\n\n    // Update animation frame\n    if (timestamp - this.lastUpdate > this.animationSpeed) {\n      this.currentFrame = (this.currentFrame + 1) % animationData.frames.length;\n      this.lastUpdate = timestamp;\n    }\n    const frame = animationData.frames[this.currentFrame];\n    ctx.save();\n    ctx.translate(x, y);\n\n    // Apply body lean\n    if (frame.bodyLean !== 0) {\n      ctx.rotate(frame.bodyLean * Math.PI / 180);\n    }\n\n    // Draw Adelynn character\n    this.drawAdelynnBody(ctx, frame);\n    this.drawAdelynnHead(ctx, frame);\n    this.drawAdelynnHair(ctx, frame);\n    this.drawAdelynnFlightJacket(ctx, frame);\n    this.drawAdelynnWristConsole(ctx, frame);\n\n    // Draw special effects based on animation\n    if (frame.droneVisible) {\n      this.drawHolographicDrone(ctx, frame);\n    }\n    if (frame.hudVisible) {\n      this.drawHUDProjections(ctx, frame);\n    }\n    ctx.restore();\n  }\n\n  // Draw Adelynn's body\n  drawAdelynnBody(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n\n    // Body base\n    ctx.fillStyle = colors.skin;\n    ctx.fillRect(proportions.body.x - proportions.body.width / 2, proportions.body.y - proportions.body.height / 2, proportions.body.width, proportions.body.height);\n  }\n\n  // Draw Adelynn's head\n  drawAdelynnHead(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n\n    // Head shape\n    ctx.fillStyle = colors.skin;\n    ctx.beginPath();\n    ctx.ellipse(proportions.head.x, proportions.head.y, proportions.head.width / 2, proportions.head.height / 2, 0, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Eyes (calm and focused)\n    ctx.fillStyle = colors.eyes;\n    ctx.beginPath();\n    ctx.arc(proportions.head.x - 25, proportions.head.y - 15, 6, 0, Math.PI * 2);\n    ctx.arc(proportions.head.x + 25, proportions.head.y - 15, 6, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Mouth (calm expression)\n    ctx.fillStyle = colors.mouth;\n    ctx.beginPath();\n    ctx.arc(proportions.head.x, proportions.head.y + 15, 8, 0, Math.PI);\n    ctx.fill();\n  }\n\n  // Draw Adelynn's hair (long silver braid)\n  drawAdelynnHair(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n    ctx.save();\n\n    // Apply hair sway animation\n    if (frame.hairSway !== 0) {\n      ctx.translate(frame.hairSway * 2, 0);\n    }\n\n    // Hair base\n    ctx.fillStyle = colors.hair;\n    ctx.beginPath();\n    ctx.moveTo(proportions.hair.x - 80, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x - 60, proportions.hair.y - 120);\n    ctx.lineTo(proportions.hair.x - 40, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x - 20, proportions.hair.y - 110);\n    ctx.lineTo(proportions.hair.x, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x + 20, proportions.hair.y - 110);\n    ctx.lineTo(proportions.hair.x + 40, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x + 60, proportions.hair.y - 120);\n    ctx.lineTo(proportions.hair.x + 80, proportions.hair.y - 100);\n    ctx.closePath();\n    ctx.fill();\n\n    // Long braid extending down\n    ctx.fillStyle = colors.hair;\n    ctx.fillRect(proportions.hair.x - 15, proportions.hair.y - 50, 30, 200);\n\n    // Hair highlights (light silver)\n    ctx.fillStyle = colors.hairHighlights;\n    ctx.shadowBlur = 3;\n    ctx.shadowColor = colors.hairHighlights;\n    ctx.fillRect(proportions.hair.x - 25, proportions.hair.y - 110, 50, 20);\n    ctx.shadowBlur = 0;\n    ctx.restore();\n  }\n\n  // Draw Adelynn's flight jacket with circuitry\n  drawAdelynnFlightJacket(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n\n    // Flight jacket base\n    ctx.fillStyle = colors.flightJacket;\n    ctx.fillRect(proportions.body.x - proportions.body.width / 2 + 20, proportions.body.y - proportions.body.height / 2 + 20, proportions.body.width - 40, proportions.body.height - 40);\n\n    // Glowing pink circuitry patterns\n    ctx.fillStyle = colors.circuitry;\n    ctx.shadowBlur = 8;\n    ctx.shadowColor = colors.circuitry;\n\n    // Circuit lines\n    ctx.strokeStyle = colors.circuitry;\n    ctx.lineWidth = 3;\n\n    // Chest circuitry\n    ctx.beginPath();\n    ctx.moveTo(proportions.body.x - 80, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x - 40, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x - 40, proportions.body.y - 40);\n    ctx.lineTo(proportions.body.x + 40, proportions.body.y - 40);\n    ctx.lineTo(proportions.body.x + 40, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x + 80, proportions.body.y - 80);\n    ctx.stroke();\n\n    // Side circuitry\n    ctx.beginPath();\n    ctx.moveTo(proportions.body.x - 100, proportions.body.y);\n    ctx.lineTo(proportions.body.x - 60, proportions.body.y);\n    ctx.lineTo(proportions.body.x - 60, proportions.body.y + 40);\n    ctx.lineTo(proportions.body.x + 60, proportions.body.y + 40);\n    ctx.lineTo(proportions.body.x + 60, proportions.body.y);\n    ctx.lineTo(proportions.body.x + 100, proportions.body.y);\n    ctx.stroke();\n    ctx.shadowBlur = 0;\n  }\n\n  // Draw Adelynn's holographic wrist console\n  drawAdelynnWristConsole(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n\n    // Wrist console base\n    ctx.fillStyle = colors.wristConsole;\n    ctx.shadowBlur = frame.consoleBlink * 10;\n    ctx.shadowColor = colors.consoleGlow;\n    ctx.fillRect(proportions.console.x - proportions.console.width / 2, proportions.console.y - proportions.console.height / 2, proportions.console.width, proportions.console.height);\n\n    // Console screen\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(proportions.console.x - proportions.console.width / 2 + 5, proportions.console.y - proportions.console.height / 2 + 5, proportions.console.width - 10, proportions.console.height - 10);\n\n    // Blinking lights on console\n    ctx.fillStyle = colors.consoleGlow;\n    ctx.globalAlpha = frame.consoleBlink;\n\n    // LED indicators\n    ctx.fillRect(proportions.console.x - 15, proportions.console.y - 15, 4, 4);\n    ctx.fillRect(proportions.console.x + 11, proportions.console.y - 15, 4, 4);\n    ctx.fillRect(proportions.console.x - 15, proportions.console.y + 11, 4, 4);\n    ctx.fillRect(proportions.console.x + 11, proportions.console.y + 11, 4, 4);\n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n  }\n\n  // Draw holographic drone\n  drawHolographicDrone(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n    ctx.save();\n\n    // Drone position (floating above console)\n    const droneX = proportions.console.x + 50;\n    const droneY = proportions.console.y - 30;\n\n    // Drone body with holographic effect\n    ctx.fillStyle = colors.drone;\n    ctx.shadowBlur = 15;\n    ctx.shadowColor = colors.drone;\n    ctx.globalAlpha = 0.8;\n    ctx.beginPath();\n    ctx.arc(droneX, droneY, 15, 0, Math.PI * 2);\n    ctx.fill();\n\n    // Drone propellers\n    ctx.fillStyle = colors.drone;\n    ctx.fillRect(droneX - 20, droneY - 3, 8, 6);\n    ctx.fillRect(droneX + 12, droneY - 3, 8, 6);\n    ctx.fillRect(droneX - 3, droneY - 20, 6, 8);\n    ctx.fillRect(droneX - 3, droneY + 12, 6, 8);\n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n    ctx.restore();\n  }\n\n  // Draw HUD projections\n  drawHUDProjections(ctx, frame) {\n    const {\n      proportions,\n      colors\n    } = AdelynnSprite.spriteData;\n    ctx.save();\n\n    // HUD position (projected from console)\n    const hudX = proportions.console.x + 60;\n    const hudY = proportions.console.y - 40;\n\n    // HUD frame\n    ctx.fillStyle = colors.hud;\n    ctx.shadowBlur = 20;\n    ctx.shadowColor = colors.hud;\n    ctx.globalAlpha = 0.7;\n    ctx.strokeStyle = colors.hud;\n    ctx.lineWidth = 2;\n    ctx.strokeRect(hudX, hudY, 120, 80);\n\n    // HUD content lines\n    ctx.beginPath();\n    ctx.moveTo(hudX + 10, hudY + 20);\n    ctx.lineTo(hudX + 110, hudY + 20);\n    ctx.moveTo(hudX + 10, hudY + 35);\n    ctx.lineTo(hudX + 110, hudY + 35);\n    ctx.moveTo(hudX + 10, hudY + 50);\n    ctx.lineTo(hudX + 110, hudY + 50);\n    ctx.stroke();\n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n    ctx.restore();\n  }\n}\nexport default AdelynnSprite;","map":{"version":3,"names":["AdelynnSprite","name","age","description","design","hair","color","style","highlights","flightJacket","primary","circuitry","wristConsole","effect","expression","stance","animations","idle","frames","hairSway","consoleBlink","bodyLean","droneDeploy","droneVisible","consoleTap","hudVisible","spriteData","width","height","proportions","head","x","y","body","arms","legs","console","colors","skin","hairHighlights","consoleGlow","eyes","mouth","drone","hud","AdelynnSpriteRenderer","constructor","currentFrame","animationSpeed","lastUpdate","renderAdelynn","ctx","animation","timestamp","animationData","length","frame","save","translate","rotate","Math","PI","drawAdelynnBody","drawAdelynnHead","drawAdelynnHair","drawAdelynnFlightJacket","drawAdelynnWristConsole","drawHolographicDrone","drawHUDProjections","restore","fillStyle","fillRect","beginPath","ellipse","fill","arc","moveTo","lineTo","closePath","shadowBlur","shadowColor","strokeStyle","lineWidth","stroke","globalAlpha","droneX","droneY","hudX","hudY","strokeRect"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/graphics/AdelynnSprite.js"],"sourcesContent":["// Enhanced Adelynn Character Sprite - Professional Animated Design\n// Based on: Young female tactical engineer, early 20s, calm and focused,\n// long silver braid, dark purple flight jacket with glowing pink circuitry patterns,\n// holographic wrist console\n\nexport const AdelynnSprite = {\n  name: \"Adelynn\",\n  age: \"early 20s\",\n  description: \"Calm and focused tactical engineer with futuristic sci-fi design\",\n  \n  // Character Design Specifications\n  design: {\n    hair: {\n      color: \"#C0C0C0\", // Silver\n      style: \"long braid\",\n      highlights: \"#E0E0E0\" // Light silver highlights\n    },\n    flightJacket: {\n      primary: \"#4A148C\", // Dark purple\n      circuitry: \"#FF1493\", // Glowing pink circuitry patterns\n      style: \"tactical engineer jacket\"\n    },\n    wristConsole: {\n      color: \"#00FFFF\", // Cyan holographic\n      effect: \"holographic projections\",\n      style: \"advanced tech interface\"\n    },\n    expression: \"calm and focused\",\n    stance: \"professional, slightly analytical\"\n  },\n  \n  // Animation States\n  animations: {\n    idle: {\n      description: \"Soft idle loop with hair sway and blinking lights on wrist console\",\n      frames: [\n        {\n          name: \"idle_1\",\n          description: \"Neutral position with subtle hair movement\",\n          hairSway: 0,\n          consoleBlink: 1.0,\n          bodyLean: 0\n        },\n        {\n          name: \"idle_2\",\n          description: \"Hair swaying slightly, console lights dimming\",\n          hairSway: 2,\n          consoleBlink: 0.7,\n          bodyLean: 1\n        },\n        {\n          name: \"idle_3\",\n          description: \"Hair returning to center, console brightening\",\n          hairSway: -1,\n          consoleBlink: 1.2,\n          bodyLean: 0\n        },\n        {\n          name: \"idle_4\",\n          description: \"Gentle hair movement, console pulsing\",\n          hairSway: 1,\n          consoleBlink: 0.8,\n          bodyLean: -1\n        }\n      ]\n    },\n    \n    droneDeploy: {\n      description: \"Adelynn deploying a small holographic drone\",\n      frames: [\n        {\n          name: \"deploy_1\",\n          description: \"Raising wrist console to deploy drone\",\n          hairSway: 0,\n          consoleBlink: 2.0,\n          bodyLean: 3,\n          droneVisible: false\n        },\n        {\n          name: \"deploy_2\",\n          description: \"Drone materializing from holographic projection\",\n          hairSway: 1,\n          consoleBlink: 1.5,\n          bodyLean: 5,\n          droneVisible: true\n        },\n        {\n          name: \"deploy_3\",\n          description: \"Drone fully deployed and hovering\",\n          hairSway: 0,\n          consoleBlink: 1.0,\n          bodyLean: 2,\n          droneVisible: true\n        }\n      ]\n    },\n    \n    consoleTap: {\n      description: \"Adelynn tapping her wrist console with glowing HUD projections\",\n      frames: [\n        {\n          name: \"tap_1\",\n          description: \"Bringing wrist console to attention\",\n          hairSway: 0,\n          consoleBlink: 1.5,\n          bodyLean: 2,\n          hudVisible: false\n        },\n        {\n          name: \"tap_2\",\n          description: \"Tapping console, HUD projections appearing\",\n          hairSway: 1,\n          consoleBlink: 2.0,\n          bodyLean: 3,\n          hudVisible: true\n        },\n        {\n          name: \"tap_3\",\n          description: \"HUD fully projected, analyzing data\",\n          hairSway: 0,\n          consoleBlink: 1.8,\n          bodyLean: 2,\n          hudVisible: true\n        }\n      ]\n    }\n  },\n  \n  // Sprite Rendering Data (1024x1024 resolution)\n  spriteData: {\n    width: 1024,\n    height: 1024,\n    \n    // Character proportions (center-based)\n    proportions: {\n      head: { width: 180, height: 220, x: 512, y: 200 },\n      body: { width: 280, height: 380, x: 512, y: 450 },\n      arms: { width: 70, height: 180, x: 400, y: 500 },\n      legs: { width: 100, height: 280, x: 480, y: 650 },\n      hair: { width: 200, height: 400, x: 512, y: 180 },\n      console: { width: 80, height: 60, x: 420, y: 550 }\n    },\n    \n    // Color palette\n    colors: {\n      skin: \"#FFDBAC\",\n      hair: \"#C0C0C0\",\n      hairHighlights: \"#E0E0E0\",\n      flightJacket: \"#4A148C\",\n      circuitry: \"#FF1493\",\n      wristConsole: \"#00FFFF\",\n      consoleGlow: \"#00FFFF\",\n      eyes: \"#9370DB\",\n      mouth: \"#FF69B4\",\n      drone: \"#00FFFF\",\n      hud: \"#00FFFF\"\n    }\n  }\n};\n\n// Advanced Sprite Renderer for Adelynn\nexport class AdelynnSpriteRenderer {\n  constructor() {\n    this.currentFrame = 0;\n    this.animationSpeed = 120; // milliseconds per frame\n    this.lastUpdate = 0;\n  }\n  \n  // Render Adelynn with animation\n  renderAdelynn(ctx, x, y, animation = 'idle', timestamp = 0) {\n    const animationData = AdelynnSprite.animations[animation];\n    if (!animationData) return;\n    \n    // Update animation frame\n    if (timestamp - this.lastUpdate > this.animationSpeed) {\n      this.currentFrame = (this.currentFrame + 1) % animationData.frames.length;\n      this.lastUpdate = timestamp;\n    }\n    \n    const frame = animationData.frames[this.currentFrame];\n    \n    ctx.save();\n    ctx.translate(x, y);\n    \n    // Apply body lean\n    if (frame.bodyLean !== 0) {\n      ctx.rotate(frame.bodyLean * Math.PI / 180);\n    }\n    \n    // Draw Adelynn character\n    this.drawAdelynnBody(ctx, frame);\n    this.drawAdelynnHead(ctx, frame);\n    this.drawAdelynnHair(ctx, frame);\n    this.drawAdelynnFlightJacket(ctx, frame);\n    this.drawAdelynnWristConsole(ctx, frame);\n    \n    // Draw special effects based on animation\n    if (frame.droneVisible) {\n      this.drawHolographicDrone(ctx, frame);\n    }\n    if (frame.hudVisible) {\n      this.drawHUDProjections(ctx, frame);\n    }\n    \n    ctx.restore();\n  }\n  \n  // Draw Adelynn's body\n  drawAdelynnBody(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    // Body base\n    ctx.fillStyle = colors.skin;\n    ctx.fillRect(\n      proportions.body.x - proportions.body.width/2,\n      proportions.body.y - proportions.body.height/2,\n      proportions.body.width,\n      proportions.body.height\n    );\n  }\n  \n  // Draw Adelynn's head\n  drawAdelynnHead(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    // Head shape\n    ctx.fillStyle = colors.skin;\n    ctx.beginPath();\n    ctx.ellipse(\n      proportions.head.x,\n      proportions.head.y,\n      proportions.head.width/2,\n      proportions.head.height/2,\n      0,\n      0,\n      Math.PI * 2\n    );\n    ctx.fill();\n    \n    // Eyes (calm and focused)\n    ctx.fillStyle = colors.eyes;\n    ctx.beginPath();\n    ctx.arc(proportions.head.x - 25, proportions.head.y - 15, 6, 0, Math.PI * 2);\n    ctx.arc(proportions.head.x + 25, proportions.head.y - 15, 6, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Mouth (calm expression)\n    ctx.fillStyle = colors.mouth;\n    ctx.beginPath();\n    ctx.arc(proportions.head.x, proportions.head.y + 15, 8, 0, Math.PI);\n    ctx.fill();\n  }\n  \n  // Draw Adelynn's hair (long silver braid)\n  drawAdelynnHair(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    ctx.save();\n    \n    // Apply hair sway animation\n    if (frame.hairSway !== 0) {\n      ctx.translate(frame.hairSway * 2, 0);\n    }\n    \n    // Hair base\n    ctx.fillStyle = colors.hair;\n    ctx.beginPath();\n    ctx.moveTo(proportions.hair.x - 80, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x - 60, proportions.hair.y - 120);\n    ctx.lineTo(proportions.hair.x - 40, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x - 20, proportions.hair.y - 110);\n    ctx.lineTo(proportions.hair.x, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x + 20, proportions.hair.y - 110);\n    ctx.lineTo(proportions.hair.x + 40, proportions.hair.y - 100);\n    ctx.lineTo(proportions.hair.x + 60, proportions.hair.y - 120);\n    ctx.lineTo(proportions.hair.x + 80, proportions.hair.y - 100);\n    ctx.closePath();\n    ctx.fill();\n    \n    // Long braid extending down\n    ctx.fillStyle = colors.hair;\n    ctx.fillRect(\n      proportions.hair.x - 15,\n      proportions.hair.y - 50,\n      30,\n      200\n    );\n    \n    // Hair highlights (light silver)\n    ctx.fillStyle = colors.hairHighlights;\n    ctx.shadowBlur = 3;\n    ctx.shadowColor = colors.hairHighlights;\n    ctx.fillRect(proportions.hair.x - 25, proportions.hair.y - 110, 50, 20);\n    ctx.shadowBlur = 0;\n    \n    ctx.restore();\n  }\n  \n  // Draw Adelynn's flight jacket with circuitry\n  drawAdelynnFlightJacket(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    // Flight jacket base\n    ctx.fillStyle = colors.flightJacket;\n    ctx.fillRect(\n      proportions.body.x - proportions.body.width/2 + 20,\n      proportions.body.y - proportions.body.height/2 + 20,\n      proportions.body.width - 40,\n      proportions.body.height - 40\n    );\n    \n    // Glowing pink circuitry patterns\n    ctx.fillStyle = colors.circuitry;\n    ctx.shadowBlur = 8;\n    ctx.shadowColor = colors.circuitry;\n    \n    // Circuit lines\n    ctx.strokeStyle = colors.circuitry;\n    ctx.lineWidth = 3;\n    \n    // Chest circuitry\n    ctx.beginPath();\n    ctx.moveTo(proportions.body.x - 80, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x - 40, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x - 40, proportions.body.y - 40);\n    ctx.lineTo(proportions.body.x + 40, proportions.body.y - 40);\n    ctx.lineTo(proportions.body.x + 40, proportions.body.y - 80);\n    ctx.lineTo(proportions.body.x + 80, proportions.body.y - 80);\n    ctx.stroke();\n    \n    // Side circuitry\n    ctx.beginPath();\n    ctx.moveTo(proportions.body.x - 100, proportions.body.y);\n    ctx.lineTo(proportions.body.x - 60, proportions.body.y);\n    ctx.lineTo(proportions.body.x - 60, proportions.body.y + 40);\n    ctx.lineTo(proportions.body.x + 60, proportions.body.y + 40);\n    ctx.lineTo(proportions.body.x + 60, proportions.body.y);\n    ctx.lineTo(proportions.body.x + 100, proportions.body.y);\n    ctx.stroke();\n    \n    ctx.shadowBlur = 0;\n  }\n  \n  // Draw Adelynn's holographic wrist console\n  drawAdelynnWristConsole(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    // Wrist console base\n    ctx.fillStyle = colors.wristConsole;\n    ctx.shadowBlur = frame.consoleBlink * 10;\n    ctx.shadowColor = colors.consoleGlow;\n    \n    ctx.fillRect(\n      proportions.console.x - proportions.console.width/2,\n      proportions.console.y - proportions.console.height/2,\n      proportions.console.width,\n      proportions.console.height\n    );\n    \n    // Console screen\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(\n      proportions.console.x - proportions.console.width/2 + 5,\n      proportions.console.y - proportions.console.height/2 + 5,\n      proportions.console.width - 10,\n      proportions.console.height - 10\n    );\n    \n    // Blinking lights on console\n    ctx.fillStyle = colors.consoleGlow;\n    ctx.globalAlpha = frame.consoleBlink;\n    \n    // LED indicators\n    ctx.fillRect(proportions.console.x - 15, proportions.console.y - 15, 4, 4);\n    ctx.fillRect(proportions.console.x + 11, proportions.console.y - 15, 4, 4);\n    ctx.fillRect(proportions.console.x - 15, proportions.console.y + 11, 4, 4);\n    ctx.fillRect(proportions.console.x + 11, proportions.console.y + 11, 4, 4);\n    \n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n  }\n  \n  // Draw holographic drone\n  drawHolographicDrone(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    ctx.save();\n    \n    // Drone position (floating above console)\n    const droneX = proportions.console.x + 50;\n    const droneY = proportions.console.y - 30;\n    \n    // Drone body with holographic effect\n    ctx.fillStyle = colors.drone;\n    ctx.shadowBlur = 15;\n    ctx.shadowColor = colors.drone;\n    ctx.globalAlpha = 0.8;\n    \n    ctx.beginPath();\n    ctx.arc(droneX, droneY, 15, 0, Math.PI * 2);\n    ctx.fill();\n    \n    // Drone propellers\n    ctx.fillStyle = colors.drone;\n    ctx.fillRect(droneX - 20, droneY - 3, 8, 6);\n    ctx.fillRect(droneX + 12, droneY - 3, 8, 6);\n    ctx.fillRect(droneX - 3, droneY - 20, 6, 8);\n    ctx.fillRect(droneX - 3, droneY + 12, 6, 8);\n    \n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n    \n    ctx.restore();\n  }\n  \n  // Draw HUD projections\n  drawHUDProjections(ctx, frame) {\n    const { proportions, colors } = AdelynnSprite.spriteData;\n    \n    ctx.save();\n    \n    // HUD position (projected from console)\n    const hudX = proportions.console.x + 60;\n    const hudY = proportions.console.y - 40;\n    \n    // HUD frame\n    ctx.fillStyle = colors.hud;\n    ctx.shadowBlur = 20;\n    ctx.shadowColor = colors.hud;\n    ctx.globalAlpha = 0.7;\n    \n    ctx.strokeStyle = colors.hud;\n    ctx.lineWidth = 2;\n    ctx.strokeRect(hudX, hudY, 120, 80);\n    \n    // HUD content lines\n    ctx.beginPath();\n    ctx.moveTo(hudX + 10, hudY + 20);\n    ctx.lineTo(hudX + 110, hudY + 20);\n    ctx.moveTo(hudX + 10, hudY + 35);\n    ctx.lineTo(hudX + 110, hudY + 35);\n    ctx.moveTo(hudX + 10, hudY + 50);\n    ctx.lineTo(hudX + 110, hudY + 50);\n    ctx.stroke();\n    \n    ctx.globalAlpha = 1;\n    ctx.shadowBlur = 0;\n    \n    ctx.restore();\n  }\n}\n\nexport default AdelynnSprite;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}