{"ast":null,"code":"export class MobileSystem {\n  constructor() {\n    this.isMobile = false;\n    this.isIOS = false;\n    this.isAndroid = false;\n    this.hasTouch = false;\n    this.hapticEnabled = false;\n    this.detectDevice();\n    this.initializeTouch();\n  }\n  detectDevice() {\n    const userAgent = navigator.userAgent.toLowerCase();\n    this.isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\n    this.isIOS = /iphone|ipad|ipod/i.test(userAgent);\n    this.isAndroid = /android/i.test(userAgent);\n    this.hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n\n    // Enable haptic feedback if available\n    this.hapticEnabled = 'vibrate' in navigator;\n  }\n  initializeTouch() {\n    if (this.hasTouch) {\n      // Prevent default touch behaviors that might interfere with the game\n      document.addEventListener('touchstart', e => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n      document.addEventListener('touchmove', e => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n      document.addEventListener('touchend', e => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, {\n        passive: false\n      });\n    }\n  }\n  isMobileDevice() {\n    return this.isMobile;\n  }\n  isIOSDevice() {\n    return this.isIOS;\n  }\n  isAndroidDevice() {\n    return this.isAndroid;\n  }\n  hasTouchSupport() {\n    return this.hasTouch;\n  }\n  isHapticEnabled() {\n    return this.hapticEnabled;\n  }\n\n  // Haptic feedback methods\n  vibrate(pattern) {\n    if (this.hapticEnabled && 'vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  }\n  lightVibrate() {\n    this.vibrate(50);\n  }\n  mediumVibrate() {\n    this.vibrate(100);\n  }\n  heavyVibrate() {\n    this.vibrate([100, 50, 100]);\n  }\n\n  // Touch event handling\n  getTouchPosition(event) {\n    if (event.touches.length > 0) {\n      const touch = event.touches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n    return null;\n  }\n\n  // iOS-specific optimizations\n  optimizeForIOS() {\n    if (this.isIOS) {\n      // Prevent zoom on double tap\n      let lastTouchEnd = 0;\n      document.addEventListener('touchend', e => {\n        const now = new Date().getTime();\n        if (now - lastTouchEnd <= 300) {\n          e.preventDefault();\n        }\n        lastTouchEnd = now;\n      }, false);\n\n      // Prevent scroll bounce\n      document.addEventListener('touchmove', e => {\n        e.preventDefault();\n      }, {\n        passive: false\n      });\n\n      // Hide address bar\n      window.addEventListener('load', () => {\n        setTimeout(() => {\n          window.scrollTo(0, 1);\n        }, 0);\n      });\n    }\n  }\n\n  // Android-specific optimizations\n  optimizeForAndroid() {\n    if (this.isAndroid) {\n      // Prevent context menu on long press\n      document.addEventListener('contextmenu', e => {\n        e.preventDefault();\n      });\n\n      // Optimize for Android WebView\n      const meta = document.createElement('meta');\n      meta.name = 'viewport';\n      meta.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n      document.head.appendChild(meta);\n    }\n  }\n\n  // Get optimal canvas size for mobile\n  getOptimalCanvasSize() {\n    if (this.isMobile) {\n      return {\n        width: Math.min(window.innerWidth, 400),\n        height: Math.min(window.innerHeight, 600)\n      };\n    }\n    return {\n      width: 800,\n      height: 600\n    };\n  }\n\n  // Check if device supports fullscreen\n  supportsFullscreen() {\n    return !!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled);\n  }\n\n  // Enter fullscreen mode\n  enterFullscreen() {\n    if (this.supportsFullscreen()) {\n      const element = document.documentElement;\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      }\n    }\n  }\n\n  // Exit fullscreen mode\n  exitFullscreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  // Get device orientation\n  getOrientation() {\n    return window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n  }\n\n  // Check if device is in landscape mode\n  isLandscape() {\n    return this.getOrientation() === 'landscape';\n  }\n\n  // Check if device is in portrait mode\n  isPortrait() {\n    return this.getOrientation() === 'portrait';\n  }\n\n  // Get device pixel ratio for high DPI displays\n  getPixelRatio() {\n    return window.devicePixelRatio || 1;\n  }\n\n  // Optimize canvas for high DPI displays\n  optimizeCanvasForDPI(canvas) {\n    const pixelRatio = this.getPixelRatio();\n    if (pixelRatio > 1) {\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * pixelRatio;\n      canvas.height = rect.height * pixelRatio;\n      canvas.style.width = rect.width + 'px';\n      canvas.style.height = rect.height + 'px';\n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.scale(pixelRatio, pixelRatio);\n      }\n    }\n  }\n}","map":{"version":3,"names":["MobileSystem","constructor","isMobile","isIOS","isAndroid","hasTouch","hapticEnabled","detectDevice","initializeTouch","userAgent","navigator","toLowerCase","test","window","maxTouchPoints","document","addEventListener","e","target","body","preventDefault","passive","isMobileDevice","isIOSDevice","isAndroidDevice","hasTouchSupport","isHapticEnabled","vibrate","pattern","lightVibrate","mediumVibrate","heavyVibrate","getTouchPosition","event","touches","length","touch","x","clientX","y","clientY","optimizeForIOS","lastTouchEnd","now","Date","getTime","setTimeout","scrollTo","optimizeForAndroid","meta","createElement","name","content","head","appendChild","getOptimalCanvasSize","width","Math","min","innerWidth","height","innerHeight","supportsFullscreen","fullscreenEnabled","webkitFullscreenEnabled","mozFullScreenEnabled","msFullscreenEnabled","enterFullscreen","element","documentElement","requestFullscreen","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","getOrientation","isLandscape","isPortrait","getPixelRatio","devicePixelRatio","optimizeCanvasForDPI","canvas","pixelRatio","rect","getBoundingClientRect","style","ctx","getContext","scale"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/systems/MobileSystem.ts"],"sourcesContent":["export class MobileSystem {\n  private isMobile: boolean = false;\n  private isIOS: boolean = false;\n  private isAndroid: boolean = false;\n  private hasTouch: boolean = false;\n  private hapticEnabled: boolean = false;\n\n  constructor() {\n    this.detectDevice();\n    this.initializeTouch();\n  }\n\n  private detectDevice(): void {\n    const userAgent = navigator.userAgent.toLowerCase();\n    \n    this.isMobile = /android|webos|iphone|ipad|ipod|blackberry|iemobile|opera mini/i.test(userAgent);\n    this.isIOS = /iphone|ipad|ipod/i.test(userAgent);\n    this.isAndroid = /android/i.test(userAgent);\n    this.hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;\n    \n    // Enable haptic feedback if available\n    this.hapticEnabled = 'vibrate' in navigator;\n  }\n\n  private initializeTouch(): void {\n    if (this.hasTouch) {\n      // Prevent default touch behaviors that might interfere with the game\n      document.addEventListener('touchstart', (e) => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, { passive: false });\n      \n      document.addEventListener('touchmove', (e) => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, { passive: false });\n      \n      document.addEventListener('touchend', (e) => {\n        if (e.target === document.body) {\n          e.preventDefault();\n        }\n      }, { passive: false });\n    }\n  }\n\n  isMobileDevice(): boolean {\n    return this.isMobile;\n  }\n\n  isIOSDevice(): boolean {\n    return this.isIOS;\n  }\n\n  isAndroidDevice(): boolean {\n    return this.isAndroid;\n  }\n\n  hasTouchSupport(): boolean {\n    return this.hasTouch;\n  }\n\n  isHapticEnabled(): boolean {\n    return this.hapticEnabled;\n  }\n\n  // Haptic feedback methods\n  vibrate(pattern: number | number[]): void {\n    if (this.hapticEnabled && 'vibrate' in navigator) {\n      navigator.vibrate(pattern);\n    }\n  }\n\n  lightVibrate(): void {\n    this.vibrate(50);\n  }\n\n  mediumVibrate(): void {\n    this.vibrate(100);\n  }\n\n  heavyVibrate(): void {\n    this.vibrate([100, 50, 100]);\n  }\n\n  // Touch event handling\n  getTouchPosition(event: TouchEvent): { x: number; y: number } | null {\n    if (event.touches.length > 0) {\n      const touch = event.touches[0];\n      return {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n    }\n    return null;\n  }\n\n  // iOS-specific optimizations\n  optimizeForIOS(): void {\n    if (this.isIOS) {\n      // Prevent zoom on double tap\n      let lastTouchEnd = 0;\n      document.addEventListener('touchend', (e) => {\n        const now = (new Date()).getTime();\n        if (now - lastTouchEnd <= 300) {\n          e.preventDefault();\n        }\n        lastTouchEnd = now;\n      }, false);\n\n      // Prevent scroll bounce\n      document.addEventListener('touchmove', (e) => {\n        e.preventDefault();\n      }, { passive: false });\n\n      // Hide address bar\n      window.addEventListener('load', () => {\n        setTimeout(() => {\n          window.scrollTo(0, 1);\n        }, 0);\n      });\n    }\n  }\n\n  // Android-specific optimizations\n  optimizeForAndroid(): void {\n    if (this.isAndroid) {\n      // Prevent context menu on long press\n      document.addEventListener('contextmenu', (e) => {\n        e.preventDefault();\n      });\n\n      // Optimize for Android WebView\n      const meta = document.createElement('meta');\n      meta.name = 'viewport';\n      meta.content = 'width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no';\n      document.head.appendChild(meta);\n    }\n  }\n\n  // Get optimal canvas size for mobile\n  getOptimalCanvasSize(): { width: number; height: number } {\n    if (this.isMobile) {\n      return {\n        width: Math.min(window.innerWidth, 400),\n        height: Math.min(window.innerHeight, 600)\n      };\n    }\n    \n    return {\n      width: 800,\n      height: 600\n    };\n  }\n\n  // Check if device supports fullscreen\n  supportsFullscreen(): boolean {\n    return !!(document.fullscreenEnabled || \n              (document as any).webkitFullscreenEnabled || \n              (document as any).mozFullScreenEnabled || \n              (document as any).msFullscreenEnabled);\n  }\n\n  // Enter fullscreen mode\n  enterFullscreen(): void {\n    if (this.supportsFullscreen()) {\n      const element = document.documentElement;\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if ((element as any).webkitRequestFullscreen) {\n        (element as any).webkitRequestFullscreen();\n      } else if ((element as any).mozRequestFullScreen) {\n        (element as any).mozRequestFullScreen();\n      } else if ((element as any).msRequestFullscreen) {\n        (element as any).msRequestFullscreen();\n      }\n    }\n  }\n\n  // Exit fullscreen mode\n  exitFullscreen(): void {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if ((document as any).webkitExitFullscreen) {\n      (document as any).webkitExitFullscreen();\n    } else if ((document as any).mozCancelFullScreen) {\n      (document as any).mozCancelFullScreen();\n    } else if ((document as any).msExitFullscreen) {\n      (document as any).msExitFullscreen();\n    }\n  }\n\n  // Get device orientation\n  getOrientation(): 'portrait' | 'landscape' {\n    return window.innerHeight > window.innerWidth ? 'portrait' : 'landscape';\n  }\n\n  // Check if device is in landscape mode\n  isLandscape(): boolean {\n    return this.getOrientation() === 'landscape';\n  }\n\n  // Check if device is in portrait mode\n  isPortrait(): boolean {\n    return this.getOrientation() === 'portrait';\n  }\n\n  // Get device pixel ratio for high DPI displays\n  getPixelRatio(): number {\n    return window.devicePixelRatio || 1;\n  }\n\n  // Optimize canvas for high DPI displays\n  optimizeCanvasForDPI(canvas: HTMLCanvasElement): void {\n    const pixelRatio = this.getPixelRatio();\n    \n    if (pixelRatio > 1) {\n      const rect = canvas.getBoundingClientRect();\n      canvas.width = rect.width * pixelRatio;\n      canvas.height = rect.height * pixelRatio;\n      canvas.style.width = rect.width + 'px';\n      canvas.style.height = rect.height + 'px';\n      \n      const ctx = canvas.getContext('2d');\n      if (ctx) {\n        ctx.scale(pixelRatio, pixelRatio);\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}