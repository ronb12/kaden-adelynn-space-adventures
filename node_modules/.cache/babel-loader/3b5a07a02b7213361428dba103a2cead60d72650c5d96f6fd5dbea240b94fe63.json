{"ast":null,"code":"export class KillStreakSystem{constructor(){this.currentStreak=0;this.maxStreak=0;this.streakTimer=0;this.streakTimeout=3000;// 3 seconds to maintain streak\nthis.lastKillTime=0;this.streakBonuses={5:{name:'Killing Spree',multiplier:1.5},10:{name:'Rampage',multiplier:2.0},15:{name:'Dominating',multiplier:2.5},20:{name:'Unstoppable',multiplier:3.0},25:{name:'Godlike',multiplier:4.0}};}addKill(){const currentTime=Date.now();// Reset streak if too much time has passed\nif(currentTime-this.lastKillTime>this.streakTimeout){this.currentStreak=0;}this.currentStreak++;this.maxStreak=Math.max(this.maxStreak,this.currentStreak);this.streakTimer=this.streakTimeout;this.lastKillTime=currentTime;const bonus=this.getStreakBonus();const multiplier=bonus?bonus.multiplier:1;return{streak:this.currentStreak,bonus:bonus?bonus.name:undefined,multiplier:multiplier};}updateStreak(deltaTime){if(this.currentStreak>0){this.streakTimer-=deltaTime;if(this.streakTimer<=0){this.resetStreak();}}}resetStreak(){this.currentStreak=0;this.streakTimer=0;}getStreakBonus(){for(let threshold=25;threshold>=5;threshold-=5){if(this.currentStreak>=threshold){return this.streakBonuses[threshold];}}return null;}getStreakMultiplier(){const bonus=this.getStreakBonus();return bonus?bonus.multiplier:1;}getCurrentStreak(){return this.currentStreak;}getMaxStreak(){return this.maxStreak;}getStreakTimeRemaining(){return Math.max(0,this.streakTimer);}getStreakProgress(){const nextThreshold=this.getNextThreshold();if(!nextThreshold)return 1;const currentThreshold=Math.floor(this.currentStreak/5)*5;const progress=(this.currentStreak-currentThreshold)/5;return Math.min(1,progress);}getNextThreshold(){for(let threshold=5;threshold<=25;threshold+=5){if(this.currentStreak<threshold){return threshold;}}return null;}updateGameStats(gameStats){gameStats.killStreak=this.currentStreak;gameStats.maxKillStreak=this.maxStreak;}drawStreakUI(ctx,canvas){if(this.currentStreak>0){const bonus=this.getStreakBonus();const progress=this.getStreakProgress();const timeRemaining=this.getStreakTimeRemaining();// Streak display\nctx.fillStyle='#ff6600';ctx.font='bold 20px Arial';ctx.textAlign='center';ctx.fillText(\"\".concat(this.currentStreak,\" KILL STREAK\"),canvas.width/2,160);if(bonus){ctx.fillStyle='#ff0000';ctx.font='bold 24px Arial';ctx.fillText(bonus.name,canvas.width/2,190);}// Streak progress bar\nconst nextThreshold=this.getNextThreshold();if(nextThreshold){const barWidth=200;const barHeight=8;const barX=canvas.width/2-barWidth/2;const barY=210;// Background\nctx.fillStyle='#333333';ctx.fillRect(barX,barY,barWidth,barHeight);// Progress fill\nctx.fillStyle='#ff6600';ctx.fillRect(barX,barY,barWidth*progress,barHeight);// Next threshold indicator\nctx.fillStyle='#ffffff';ctx.font='14px Arial';ctx.fillText(\"Next: \".concat(nextThreshold),canvas.width/2,barY+25);}// Time remaining indicator\nctx.fillStyle='#ffff00';ctx.font='16px Arial';ctx.fillText(\"\".concat(Math.ceil(timeRemaining/1000),\"s\"),canvas.width/2,240);ctx.textAlign='left';}}}","map":{"version":3,"names":["KillStreakSystem","constructor","currentStreak","maxStreak","streakTimer","streakTimeout","lastKillTime","streakBonuses","name","multiplier","addKill","currentTime","Date","now","Math","max","bonus","getStreakBonus","streak","undefined","updateStreak","deltaTime","resetStreak","threshold","getStreakMultiplier","getCurrentStreak","getMaxStreak","getStreakTimeRemaining","getStreakProgress","nextThreshold","getNextThreshold","currentThreshold","floor","progress","min","updateGameStats","gameStats","killStreak","maxKillStreak","drawStreakUI","ctx","canvas","timeRemaining","fillStyle","font","textAlign","fillText","concat","width","barWidth","barHeight","barX","barY","fillRect","ceil"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/systems/KillStreakSystem.ts"],"sourcesContent":["import { GameStats } from '../types/GameTypes';\n\nexport class KillStreakSystem {\n  private currentStreak: number = 0;\n  private maxStreak: number = 0;\n  private streakTimer: number = 0;\n  private streakTimeout: number = 3000; // 3 seconds to maintain streak\n  private lastKillTime: number = 0;\n  private streakBonuses: { [key: number]: { name: string; multiplier: number } } = {\n    5: { name: 'Killing Spree', multiplier: 1.5 },\n    10: { name: 'Rampage', multiplier: 2.0 },\n    15: { name: 'Dominating', multiplier: 2.5 },\n    20: { name: 'Unstoppable', multiplier: 3.0 },\n    25: { name: 'Godlike', multiplier: 4.0 }\n  };\n\n  addKill(): { streak: number; bonus?: string; multiplier: number } {\n    const currentTime = Date.now();\n    \n    // Reset streak if too much time has passed\n    if (currentTime - this.lastKillTime > this.streakTimeout) {\n      this.currentStreak = 0;\n    }\n    \n    this.currentStreak++;\n    this.maxStreak = Math.max(this.maxStreak, this.currentStreak);\n    this.streakTimer = this.streakTimeout;\n    this.lastKillTime = currentTime;\n    \n    const bonus = this.getStreakBonus();\n    const multiplier = bonus ? bonus.multiplier : 1;\n    \n    return {\n      streak: this.currentStreak,\n      bonus: bonus ? bonus.name : undefined,\n      multiplier: multiplier\n    };\n  }\n\n  updateStreak(deltaTime: number): void {\n    if (this.currentStreak > 0) {\n      this.streakTimer -= deltaTime;\n      \n      if (this.streakTimer <= 0) {\n        this.resetStreak();\n      }\n    }\n  }\n\n  resetStreak(): void {\n    this.currentStreak = 0;\n    this.streakTimer = 0;\n  }\n\n  getStreakBonus(): { name: string; multiplier: number } | null {\n    for (let threshold = 25; threshold >= 5; threshold -= 5) {\n      if (this.currentStreak >= threshold) {\n        return this.streakBonuses[threshold];\n      }\n    }\n    return null;\n  }\n\n  getStreakMultiplier(): number {\n    const bonus = this.getStreakBonus();\n    return bonus ? bonus.multiplier : 1;\n  }\n\n  getCurrentStreak(): number {\n    return this.currentStreak;\n  }\n\n  getMaxStreak(): number {\n    return this.maxStreak;\n  }\n\n  getStreakTimeRemaining(): number {\n    return Math.max(0, this.streakTimer);\n  }\n\n  getStreakProgress(): number {\n    const nextThreshold = this.getNextThreshold();\n    if (!nextThreshold) return 1;\n    \n    const currentThreshold = Math.floor(this.currentStreak / 5) * 5;\n    const progress = (this.currentStreak - currentThreshold) / 5;\n    return Math.min(1, progress);\n  }\n\n  getNextThreshold(): number | null {\n    for (let threshold = 5; threshold <= 25; threshold += 5) {\n      if (this.currentStreak < threshold) {\n        return threshold;\n      }\n    }\n    return null;\n  }\n\n  updateGameStats(gameStats: GameStats): void {\n    gameStats.killStreak = this.currentStreak;\n    gameStats.maxKillStreak = this.maxStreak;\n  }\n\n  drawStreakUI(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement): void {\n    if (this.currentStreak > 0) {\n      const bonus = this.getStreakBonus();\n      const progress = this.getStreakProgress();\n      const timeRemaining = this.getStreakTimeRemaining();\n      \n      // Streak display\n      ctx.fillStyle = '#ff6600';\n      ctx.font = 'bold 20px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        `${this.currentStreak} KILL STREAK`,\n        canvas.width / 2,\n        160\n      );\n      \n      if (bonus) {\n        ctx.fillStyle = '#ff0000';\n        ctx.font = 'bold 24px Arial';\n        ctx.fillText(\n          bonus.name,\n          canvas.width / 2,\n          190\n        );\n      }\n      \n      // Streak progress bar\n      const nextThreshold = this.getNextThreshold();\n      if (nextThreshold) {\n        const barWidth = 200;\n        const barHeight = 8;\n        const barX = canvas.width / 2 - barWidth / 2;\n        const barY = 210;\n        \n        // Background\n        ctx.fillStyle = '#333333';\n        ctx.fillRect(barX, barY, barWidth, barHeight);\n        \n        // Progress fill\n        ctx.fillStyle = '#ff6600';\n        ctx.fillRect(barX, barY, barWidth * progress, barHeight);\n        \n        // Next threshold indicator\n        ctx.fillStyle = '#ffffff';\n        ctx.font = '14px Arial';\n        ctx.fillText(\n          `Next: ${nextThreshold}`,\n          canvas.width / 2,\n          barY + 25\n        );\n      }\n      \n      // Time remaining indicator\n      ctx.fillStyle = '#ffff00';\n      ctx.font = '16px Arial';\n      ctx.fillText(\n        `${Math.ceil(timeRemaining / 1000)}s`,\n        canvas.width / 2,\n        240\n      );\n      \n      ctx.textAlign = 'left';\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}