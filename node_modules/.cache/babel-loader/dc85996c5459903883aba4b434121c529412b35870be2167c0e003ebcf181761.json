{"ast":null,"code":"export class WingFighterSystem{constructor(){this.wingFighters=[];}updateWingFighters(player,canvas){this.wingFighters=player.wingFighters;this.wingFighters.forEach((wingFighter,index)=>{// Update wing fighter positions relative to player\nwingFighter.targetX=player.x+wingFighter.offset;wingFighter.targetY=player.y;// Smooth movement towards target position\nconst dx=wingFighter.targetX-wingFighter.x;const dy=wingFighter.targetY-wingFighter.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance>5){wingFighter.x+=dx/distance*wingFighter.speed;wingFighter.y+=dy/distance*wingFighter.speed;}// Keep wing fighters within screen bounds\nwingFighter.x=Math.max(0,Math.min(canvas.width-wingFighter.width,wingFighter.x));wingFighter.y=Math.max(0,Math.min(canvas.height-wingFighter.height,wingFighter.y));});}shootWingFighters(player){const bullets=[];this.wingFighters.forEach(wingFighter=>{bullets.push({x:wingFighter.x+wingFighter.width/2-2,y:wingFighter.y,width:4,height:8,speed:6,type:'wing_laser',color:'#00aaff',damage:1,owner:'player'});});return bullets;}drawWingFighters(ctx){this.wingFighters.forEach(wingFighter=>{// Draw wing fighter (identical to player ship)\nctx.fillStyle='#00aaff';ctx.fillRect(wingFighter.x,wingFighter.y,wingFighter.width,wingFighter.height);// Draw wing fighter details\nctx.fillStyle='#ffffff';ctx.fillRect(wingFighter.x+5,wingFighter.y+5,wingFighter.width-10,wingFighter.height-10);// Draw wing fighter glow effect\nctx.shadowColor='#00aaff';ctx.shadowBlur=10;ctx.fillStyle='#00aaff';ctx.fillRect(wingFighter.x,wingFighter.y,wingFighter.width,wingFighter.height);ctx.shadowBlur=0;});}removeWingFighter(wingFighterId,player){player.wingFighters=player.wingFighters.filter(wf=>wf.id!==wingFighterId);}getWingFighters(){return this.wingFighters;}}","map":{"version":3,"names":["WingFighterSystem","constructor","wingFighters","updateWingFighters","player","canvas","forEach","wingFighter","index","targetX","x","offset","targetY","y","dx","dy","distance","Math","sqrt","speed","max","min","width","height","shootWingFighters","bullets","push","type","color","damage","owner","drawWingFighters","ctx","fillStyle","fillRect","shadowColor","shadowBlur","removeWingFighter","wingFighterId","filter","wf","id","getWingFighters"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/systems/WingFighterSystem.ts"],"sourcesContent":["import { WingFighter, Player } from '../types/GameTypes';\n\nexport class WingFighterSystem {\n  private wingFighters: WingFighter[] = [];\n\n  updateWingFighters(player: Player, canvas: HTMLCanvasElement): void {\n    this.wingFighters = player.wingFighters;\n    \n    this.wingFighters.forEach((wingFighter, index) => {\n      // Update wing fighter positions relative to player\n      wingFighter.targetX = player.x + wingFighter.offset;\n      wingFighter.targetY = player.y;\n      \n      // Smooth movement towards target position\n      const dx = wingFighter.targetX - wingFighter.x;\n      const dy = wingFighter.targetY - wingFighter.y;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      \n      if (distance > 5) {\n        wingFighter.x += (dx / distance) * wingFighter.speed;\n        wingFighter.y += (dy / distance) * wingFighter.speed;\n      }\n      \n      // Keep wing fighters within screen bounds\n      wingFighter.x = Math.max(0, Math.min(canvas.width - wingFighter.width, wingFighter.x));\n      wingFighter.y = Math.max(0, Math.min(canvas.height - wingFighter.height, wingFighter.y));\n    });\n  }\n\n  shootWingFighters(player: Player): Bullet[] {\n    const bullets: Bullet[] = [];\n    \n    this.wingFighters.forEach(wingFighter => {\n      bullets.push({\n        x: wingFighter.x + wingFighter.width / 2 - 2,\n        y: wingFighter.y,\n        width: 4,\n        height: 8,\n        speed: 6,\n        type: 'wing_laser',\n        color: '#00aaff',\n        damage: 1,\n        owner: 'player'\n      });\n    });\n    \n    return bullets;\n  }\n\n  drawWingFighters(ctx: CanvasRenderingContext2D): void {\n    this.wingFighters.forEach(wingFighter => {\n      // Draw wing fighter (identical to player ship)\n      ctx.fillStyle = '#00aaff';\n      ctx.fillRect(wingFighter.x, wingFighter.y, wingFighter.width, wingFighter.height);\n      \n      // Draw wing fighter details\n      ctx.fillStyle = '#ffffff';\n      ctx.fillRect(wingFighter.x + 5, wingFighter.y + 5, wingFighter.width - 10, wingFighter.height - 10);\n      \n      // Draw wing fighter glow effect\n      ctx.shadowColor = '#00aaff';\n      ctx.shadowBlur = 10;\n      ctx.fillStyle = '#00aaff';\n      ctx.fillRect(wingFighter.x, wingFighter.y, wingFighter.width, wingFighter.height);\n      ctx.shadowBlur = 0;\n    });\n  }\n\n  removeWingFighter(wingFighterId: string, player: Player): void {\n    player.wingFighters = player.wingFighters.filter(wf => wf.id !== wingFighterId);\n  }\n\n  getWingFighters(): WingFighter[] {\n    return this.wingFighters;\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}