{"ast":null,"code":"export class ComboSystem{constructor(){this.currentCombo=0;this.maxCombo=0;this.comboTimer=0;this.comboTimeout=2000;// 2 seconds to maintain combo\nthis.lastKillTime=0;}addKill(){const currentTime=Date.now();// Reset combo if too much time has passed\nif(currentTime-this.lastKillTime>this.comboTimeout){this.currentCombo=0;}this.currentCombo++;this.maxCombo=Math.max(this.maxCombo,this.currentCombo);this.comboTimer=this.comboTimeout;this.lastKillTime=currentTime;return this.getComboMultiplier();}updateCombo(deltaTime){if(this.currentCombo>0){this.comboTimer-=deltaTime;if(this.comboTimer<=0){this.resetCombo();}}}resetCombo(){this.currentCombo=0;this.comboTimer=0;}getComboMultiplier(){if(this.currentCombo<=1)return 1;if(this.currentCombo<=5)return 2;if(this.currentCombo<=10)return 3;if(this.currentCombo<=20)return 4;return 5;// Max 5x multiplier\n}getComboScore(baseScore){return baseScore*this.getComboMultiplier();}getCurrentCombo(){return this.currentCombo;}getMaxCombo(){return this.maxCombo;}getComboTimeRemaining(){return Math.max(0,this.comboTimer);}getComboProgress(){if(this.currentCombo<=1)return 0;if(this.currentCombo<=5)return(this.currentCombo-1)/4;if(this.currentCombo<=10)return(this.currentCombo-5)/5+0.25;if(this.currentCombo<=20)return(this.currentCombo-10)/10+0.5;return 1;}updateGameStats(gameStats){gameStats.combo=this.currentCombo;gameStats.maxCombo=this.maxCombo;}drawComboUI(ctx,canvas){if(this.currentCombo>1){const multiplier=this.getComboMultiplier();const progress=this.getComboProgress();const timeRemaining=this.getComboTimeRemaining();// Combo display\nctx.fillStyle='#ffffff';ctx.font='bold 24px Arial';ctx.textAlign='center';ctx.fillText(\"COMBO x\".concat(multiplier,\"!\"),canvas.width/2,100);// Combo progress bar\nconst barWidth=200;const barHeight=10;const barX=canvas.width/2-barWidth/2;const barY=120;// Background\nctx.fillStyle='#333333';ctx.fillRect(barX,barY,barWidth,barHeight);// Progress fill\nctx.fillStyle='#00ff00';ctx.fillRect(barX,barY,barWidth*progress,barHeight);// Time remaining indicator\nctx.fillStyle='#ffff00';ctx.font='16px Arial';ctx.fillText(\"\".concat(Math.ceil(timeRemaining/1000),\"s\"),canvas.width/2,barY+30);ctx.textAlign='left';}}}","map":{"version":3,"names":["ComboSystem","constructor","currentCombo","maxCombo","comboTimer","comboTimeout","lastKillTime","addKill","currentTime","Date","now","Math","max","getComboMultiplier","updateCombo","deltaTime","resetCombo","getComboScore","baseScore","getCurrentCombo","getMaxCombo","getComboTimeRemaining","getComboProgress","updateGameStats","gameStats","combo","drawComboUI","ctx","canvas","multiplier","progress","timeRemaining","fillStyle","font","textAlign","fillText","concat","width","barWidth","barHeight","barX","barY","fillRect","ceil"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/systems/ComboSystem.ts"],"sourcesContent":["import { GameStats } from '../types/GameTypes';\n\nexport class ComboSystem {\n  private currentCombo: number = 0;\n  private maxCombo: number = 0;\n  private comboTimer: number = 0;\n  private comboTimeout: number = 2000; // 2 seconds to maintain combo\n  private lastKillTime: number = 0;\n\n  addKill(): number {\n    const currentTime = Date.now();\n    \n    // Reset combo if too much time has passed\n    if (currentTime - this.lastKillTime > this.comboTimeout) {\n      this.currentCombo = 0;\n    }\n    \n    this.currentCombo++;\n    this.maxCombo = Math.max(this.maxCombo, this.currentCombo);\n    this.comboTimer = this.comboTimeout;\n    this.lastKillTime = currentTime;\n    \n    return this.getComboMultiplier();\n  }\n\n  updateCombo(deltaTime: number): void {\n    if (this.currentCombo > 0) {\n      this.comboTimer -= deltaTime;\n      \n      if (this.comboTimer <= 0) {\n        this.resetCombo();\n      }\n    }\n  }\n\n  resetCombo(): void {\n    this.currentCombo = 0;\n    this.comboTimer = 0;\n  }\n\n  getComboMultiplier(): number {\n    if (this.currentCombo <= 1) return 1;\n    if (this.currentCombo <= 5) return 2;\n    if (this.currentCombo <= 10) return 3;\n    if (this.currentCombo <= 20) return 4;\n    return 5; // Max 5x multiplier\n  }\n\n  getComboScore(baseScore: number): number {\n    return baseScore * this.getComboMultiplier();\n  }\n\n  getCurrentCombo(): number {\n    return this.currentCombo;\n  }\n\n  getMaxCombo(): number {\n    return this.maxCombo;\n  }\n\n  getComboTimeRemaining(): number {\n    return Math.max(0, this.comboTimer);\n  }\n\n  getComboProgress(): number {\n    if (this.currentCombo <= 1) return 0;\n    if (this.currentCombo <= 5) return (this.currentCombo - 1) / 4;\n    if (this.currentCombo <= 10) return ((this.currentCombo - 5) / 5) + 0.25;\n    if (this.currentCombo <= 20) return ((this.currentCombo - 10) / 10) + 0.5;\n    return 1;\n  }\n\n  updateGameStats(gameStats: GameStats): void {\n    gameStats.combo = this.currentCombo;\n    gameStats.maxCombo = this.maxCombo;\n  }\n\n  drawComboUI(ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement): void {\n    if (this.currentCombo > 1) {\n      const multiplier = this.getComboMultiplier();\n      const progress = this.getComboProgress();\n      const timeRemaining = this.getComboTimeRemaining();\n      \n      // Combo display\n      ctx.fillStyle = '#ffffff';\n      ctx.font = 'bold 24px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        `COMBO x${multiplier}!`,\n        canvas.width / 2,\n        100\n      );\n      \n      // Combo progress bar\n      const barWidth = 200;\n      const barHeight = 10;\n      const barX = canvas.width / 2 - barWidth / 2;\n      const barY = 120;\n      \n      // Background\n      ctx.fillStyle = '#333333';\n      ctx.fillRect(barX, barY, barWidth, barHeight);\n      \n      // Progress fill\n      ctx.fillStyle = '#00ff00';\n      ctx.fillRect(barX, barY, barWidth * progress, barHeight);\n      \n      // Time remaining indicator\n      ctx.fillStyle = '#ffff00';\n      ctx.font = '16px Arial';\n      ctx.fillText(\n        `${Math.ceil(timeRemaining / 1000)}s`,\n        canvas.width / 2,\n        barY + 30\n      );\n      \n      ctx.textAlign = 'left';\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}