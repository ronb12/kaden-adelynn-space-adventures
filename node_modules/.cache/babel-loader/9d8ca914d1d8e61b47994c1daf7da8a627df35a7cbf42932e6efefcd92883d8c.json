{"ast":null,"code":"var _jsxFileName = \"/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/components/Game.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Game.css';\n\n// Import all the new systems\nimport { PowerUpSystem } from '../systems/PowerUpSystem';\nimport { WingFighterSystem } from '../systems/WingFighterSystem';\nimport { ShieldSystem } from '../systems/ShieldSystem';\nimport { ComboSystem } from '../systems/ComboSystem';\nimport { KillStreakSystem } from '../systems/KillStreakSystem';\nimport { EnhancedBossSystem } from '../systems/EnhancedBossSystem';\nimport { EnhancedEnemySystem } from '../systems/EnhancedEnemySystem';\nimport { EnhancedAchievementSystem } from '../systems/EnhancedAchievementSystem';\nimport { AudioSystem } from '../systems/AudioSystem';\nimport { DifficultySystem } from '../systems/DifficultySystem';\nimport { MobileSystem } from '../systems/MobileSystem';\n\n// Import types\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const gameLoopRef = useRef(null);\n  const lastTimeRef = useRef(0);\n\n  // Game state\n  const [gameState, setGameState] = useState('menu');\n  const [gameStats, setGameStats] = useState({\n    score: 0,\n    highScore: parseInt(localStorage.getItem('highScore') || '0'),\n    lives: 3,\n    health: 50,\n    maxHealth: 50,\n    combo: 0,\n    killStreak: 0,\n    maxCombo: 0,\n    maxKillStreak: 0,\n    playerLevel: 1,\n    playerXP: 0,\n    bossesDefeated: 0,\n    enemiesDestroyed: 0,\n    powerUpsCollected: 0,\n    gameTime: 0,\n    difficulty: 'medium',\n    wingFighters: 0,\n    shieldsUsed: 0,\n    weaponsUsed: 0,\n    livesLost: 0,\n    shieldTime: 0,\n    rapidFireTime: 0,\n    doubleShotTime: 0,\n    rapidFireUses: 0,\n    doubleShotUses: 0,\n    shieldUses: 0,\n    speedBoostUses: 0,\n    healthBoostUses: 0,\n    scoreMultiplierUses: 0\n  });\n\n  // Player state\n  const playerRef = useRef({\n    x: 0,\n    y: 0,\n    width: 40,\n    height: 40,\n    speed: 4,\n    maxSpeed: 6,\n    health: 100,\n    maxHealth: 100,\n    invulnerable: false,\n    invulnerabilityTime: 0,\n    level: 1,\n    xp: 0,\n    maxXP: 100,\n    hasShield: false,\n    shieldTime: 0,\n    rapidFire: false,\n    rapidFireTime: 0,\n    doubleShot: false,\n    wingFighters: []\n  });\n\n  // Game objects\n  const bulletsRef = useRef([]);\n  const enemiesRef = useRef([]);\n  const bossesRef = useRef([]);\n  const powerUpsRef = useRef([]);\n\n  // Systems\n  const powerUpSystemRef = useRef(new PowerUpSystem());\n  const wingFighterSystemRef = useRef(new WingFighterSystem());\n  const shieldSystemRef = useRef(new ShieldSystem());\n  const comboSystemRef = useRef(new ComboSystem());\n  const killStreakSystemRef = useRef(new KillStreakSystem());\n  const bossSystemRef = useRef(new EnhancedBossSystem());\n  const enemySystemRef = useRef(new EnhancedEnemySystem());\n  const achievementSystemRef = useRef(new EnhancedAchievementSystem());\n  const audioSystemRef = useRef(new AudioSystem());\n  const difficultySystemRef = useRef(new DifficultySystem());\n  const mobileSystemRef = useRef(new MobileSystem());\n\n  // Input state\n  const keysRef = useRef({});\n  const touchRef = useRef({\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0\n  });\n\n  // Initialize game\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const {\n      width,\n      height\n    } = mobileSystemRef.current.getOptimalCanvasSize();\n    canvas.width = width;\n    canvas.height = height;\n\n    // Optimize for mobile\n    mobileSystemRef.current.optimizeForIOS();\n    mobileSystemRef.current.optimizeForAndroid();\n    mobileSystemRef.current.optimizeCanvasForDPI(canvas);\n\n    // Initialize player position\n    playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n    playerRef.current.y = canvas.height - 100;\n\n    // Set up event listeners\n    setupEventListeners();\n    return () => {\n      cleanupEventListeners();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const setupEventListeners = () => {\n    // Keyboard events\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Touch events\n    if (mobileSystemRef.current.hasTouchSupport()) {\n      const canvas = canvasRef.current;\n      if (canvas) {\n        canvas.addEventListener('touchstart', handleTouchStart, {\n          passive: false\n        });\n        canvas.addEventListener('touchmove', handleTouchMove, {\n          passive: false\n        });\n        canvas.addEventListener('touchend', handleTouchEnd, {\n          passive: false\n        });\n      }\n    }\n  };\n  const cleanupEventListeners = () => {\n    window.removeEventListener('keydown', handleKeyDown);\n    window.removeEventListener('keyup', handleKeyUp);\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n    }\n  };\n  const handleKeyDown = event => {\n    keysRef.current[event.key] = true;\n    if (event.key === ' ') {\n      event.preventDefault();\n      shoot();\n    }\n  };\n  const handleKeyUp = event => {\n    keysRef.current[event.key] = false;\n  };\n  const handleTouchStart = event => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.startX = touch.clientX;\n    touchRef.current.startY = touch.clientY;\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n  const handleTouchMove = event => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n  const handleTouchEnd = event => {\n    event.preventDefault();\n    const touch = event.changedTouches[0];\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const rect = canvas.getBoundingClientRect();\n    const touchX = touch.clientX - rect.left;\n    const touchY = touch.clientY - rect.top;\n\n    // Check if touch is on shoot button\n    const shootButton = document.querySelector('.touch-shoot-button');\n    if (shootButton) {\n      const buttonRect = shootButton.getBoundingClientRect();\n      if (touchX >= buttonRect.left - rect.left && touchX <= buttonRect.right - rect.left && touchY >= buttonRect.top - rect.top && touchY <= buttonRect.bottom - rect.top) {\n        shoot();\n        mobileSystemRef.current.lightVibrate();\n        return;\n      }\n    }\n\n    // Handle touch movement for player control\n    const deltaX = touchRef.current.currentX - touchRef.current.startX;\n    const deltaY = touchRef.current.currentY - touchRef.current.startY;\n    if (Math.abs(deltaX) > 10 || Math.abs(deltaY) > 10) {\n      // Move player based on touch movement\n      const canvas = canvasRef.current;\n      if (canvas) {\n        playerRef.current.x = Math.max(0, Math.min(canvas.width - playerRef.current.width, playerRef.current.x + deltaX * 0.5));\n        playerRef.current.y = Math.max(0, Math.min(canvas.height - playerRef.current.height, playerRef.current.y + deltaY * 0.5));\n      }\n    }\n  };\n  const shoot = useCallback(() => {\n    if (gameState !== 'playing') return;\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n\n    // Player bullet\n    bullets.push({\n      x: player.x + player.width / 2 - 2,\n      y: player.y,\n      width: 4,\n      height: 8,\n      speed: 6,\n      type: 'player_laser',\n      color: '#00ff00',\n      damage: 1,\n      owner: 'player'\n    });\n\n    // Double shot\n    if (player.doubleShot) {\n      bullets.push({\n        x: player.x + player.width / 2 - 2,\n        y: player.y,\n        width: 4,\n        height: 8,\n        speed: 6,\n        type: 'player_laser',\n        color: '#00ff00',\n        damage: 1,\n        owner: 'player'\n      });\n    }\n\n    // Wing fighter bullets\n    const wingBullets = wingFighterSystemRef.current.shootWingFighters(player);\n    bullets.push(...wingBullets);\n    audioSystemRef.current.playShootSound();\n  }, [gameState]);\n  const startGame = () => {\n    setGameState('playing');\n    setGameStats(prev => ({\n      ...prev,\n      score: 0,\n      lives: difficultySystemRef.current.getPlayerHealth() / 10,\n      health: difficultySystemRef.current.getPlayerHealth(),\n      maxHealth: difficultySystemRef.current.getPlayerHealth(),\n      gameTime: 0\n    }));\n\n    // Reset player\n    const canvas = canvasRef.current;\n    if (canvas) {\n      playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n      playerRef.current.y = canvas.height - 100;\n      playerRef.current.health = difficultySystemRef.current.getPlayerHealth();\n      playerRef.current.speed = difficultySystemRef.current.getPlayerSpeed();\n    }\n\n    // Clear game objects\n    bulletsRef.current = [];\n    enemiesRef.current = [];\n    bossesRef.current = [];\n    powerUpsRef.current = [];\n\n    // Reset systems\n    comboSystemRef.current.resetCombo();\n    killStreakSystemRef.current.resetStreak();\n    achievementSystemRef.current = new EnhancedAchievementSystem();\n\n    // Start game loop\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  };\n  const gameLoop = useCallback(currentTime => {\n    if (gameState !== 'playing') return;\n    const deltaTime = currentTime - lastTimeRef.current;\n    lastTimeRef.current = currentTime;\n    updateGame(deltaTime);\n    render();\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  }, [gameState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateGame = deltaTime => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Update game time\n    setGameStats(prev => ({\n      ...prev,\n      gameTime: prev.gameTime + deltaTime\n    }));\n\n    // Update player\n    updatePlayer(deltaTime);\n\n    // Update systems\n    comboSystemRef.current.updateCombo(deltaTime);\n    killStreakSystemRef.current.updateStreak(deltaTime);\n    shieldSystemRef.current.updateShield(player, deltaTime);\n    wingFighterSystemRef.current.updateWingFighters(player, canvas);\n\n    // Update game objects\n    updateBullets(deltaTime);\n    updateEnemies(deltaTime);\n    updateBosses(deltaTime);\n    updatePowerUps(deltaTime);\n\n    // Spawn new objects\n    spawnEnemies();\n    spawnBosses();\n    spawnPowerUps();\n\n    // Check collisions\n    checkCollisions();\n\n    // Update achievements\n    const newAchievement = achievementSystemRef.current.updateAchievements(gameStats);\n    if (newAchievement) {\n      achievementSystemRef.current.displayAchievement(newAchievement);\n      audioSystemRef.current.playAchievementSound();\n      mobileSystemRef.current.heavyVibrate();\n    }\n    achievementSystemRef.current.updateAchievementDisplay();\n  };\n  const updatePlayer = deltaTime => {\n    const player = playerRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Handle input\n    if (keysRef.current['ArrowLeft'] || keysRef.current['a'] || keysRef.current['A']) {\n      player.x -= player.speed;\n    }\n    if (keysRef.current['ArrowRight'] || keysRef.current['d'] || keysRef.current['D']) {\n      player.x += player.speed;\n    }\n    if (keysRef.current['ArrowUp'] || keysRef.current['w'] || keysRef.current['W']) {\n      player.y -= player.speed;\n    }\n    if (keysRef.current['ArrowDown'] || keysRef.current['s'] || keysRef.current['S']) {\n      player.y += player.speed;\n    }\n\n    // Keep player within bounds\n    player.x = Math.max(0, Math.min(canvas.width - player.width, player.x));\n    player.y = Math.max(0, Math.min(canvas.height - player.height, player.y));\n\n    // Update invulnerability\n    if (player.invulnerable) {\n      player.invulnerabilityTime -= deltaTime;\n      if (player.invulnerabilityTime <= 0) {\n        player.invulnerable = false;\n      }\n    }\n\n    // Update rapid fire\n    if (player.rapidFire) {\n      player.rapidFireTime -= deltaTime;\n      if (player.rapidFireTime <= 0) {\n        player.rapidFire = false;\n      }\n    }\n  };\n  const updateBullets = deltaTime => {\n    const bullets = bulletsRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      bullet.y += bullet.speed * (bullet.owner === 'player' ? -1 : 1);\n\n      // Remove bullets that are off-screen\n      if (bullet.y < -bullet.height || bullet.y > canvas.height + bullet.height) {\n        bullets.splice(i, 1);\n      }\n    }\n  };\n  const updateEnemies = deltaTime => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const enemyBullets = enemySystemRef.current.updateEnemies(canvas, playerRef.current);\n    bulletsRef.current.push(...enemyBullets);\n  };\n  const updateBosses = deltaTime => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const bossBullets = bossSystemRef.current.updateBosses(canvas, playerRef.current);\n    bulletsRef.current.push(...bossBullets);\n  };\n  const updatePowerUps = deltaTime => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    powerUpSystemRef.current.updatePowerUps(canvas);\n  };\n  const spawnEnemies = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const newEnemy = enemySystemRef.current.spawnEnemy(canvas, gameStats.score);\n    if (newEnemy) {\n      enemiesRef.current.push(newEnemy);\n    }\n  };\n  const spawnBosses = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const newBoss = bossSystemRef.current.spawnBoss(canvas, gameStats.score);\n    if (newBoss) {\n      bossesRef.current.push(newBoss);\n    }\n  };\n  const spawnPowerUps = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const newPowerUp = powerUpSystemRef.current.spawnPowerUp(canvas, gameStats.score);\n    if (newPowerUp) {\n      powerUpsRef.current.push(newPowerUp);\n    }\n  };\n  const checkCollisions = useCallback(() => {\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Bullet vs Enemy collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n      for (let j = enemies.length - 1; j >= 0; j--) {\n        const enemy = enemies[j];\n        if (isColliding(bullet, enemy)) {\n          bullets.splice(i, 1);\n          const destroyed = enemySystemRef.current.damageEnemy(j, bullet.damage);\n          if (destroyed) {\n            enemies.splice(j, 1);\n            const comboMultiplier = comboSystemRef.current.addKill();\n            const streakData = killStreakSystemRef.current.addKill();\n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + 100 * comboMultiplier * streakData.multiplier,\n              enemiesDestroyed: prev.enemiesDestroyed + 1\n            }));\n            audioSystemRef.current.playEnemyDestroySound();\n            mobileSystemRef.current.mediumVibrate();\n          } else {\n            audioSystemRef.current.playEnemyHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Bullet vs Boss collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n      for (let j = bosses.length - 1; j >= 0; j--) {\n        const boss = bosses[j];\n        if (isColliding(bullet, boss)) {\n          bullets.splice(i, 1);\n          boss.health -= bullet.damage;\n          if (boss.health <= 0) {\n            bosses.splice(j, 1);\n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + 1000,\n              bossesDefeated: prev.bossesDefeated + 1\n            }));\n            audioSystemRef.current.playBossDestroySound();\n            mobileSystemRef.current.heavyVibrate();\n          } else {\n            audioSystemRef.current.playBossHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Player vs Enemy/Boss collisions\n    for (let i = enemies.length - 1; i >= 0; i--) {\n      const enemy = enemies[i];\n      if (isColliding(player, enemy)) {\n        enemies.splice(i, 1);\n        takeDamage(1);\n        break;\n      }\n    }\n    for (let i = bosses.length - 1; i >= 0; i--) {\n      const boss = bosses[i];\n      if (isColliding(player, boss)) {\n        takeDamage(2);\n        break;\n      }\n    }\n\n    // Player vs Enemy Bullet collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner === 'player') continue;\n      if (isColliding(player, bullet)) {\n        bullets.splice(i, 1);\n        takeDamage(bullet.damage);\n        break;\n      }\n    }\n\n    // Player vs PowerUp collisions\n    for (let i = powerUps.length - 1; i >= 0; i--) {\n      const powerUp = powerUps[i];\n      if (isColliding(player, powerUp)) {\n        powerUps.splice(i, 1);\n        powerUpSystemRef.current.collectPowerUp(powerUp, player);\n        setGameStats(prev => ({\n          ...prev,\n          powerUpsCollected: prev.powerUpsCollected + 1\n        }));\n        audioSystemRef.current.playPowerUpSound();\n        mobileSystemRef.current.lightVibrate();\n        break;\n      }\n    }\n  }, [gameStats]);\n  const takeDamage = damage => {\n    if (playerRef.current.invulnerable) return;\n\n    // Check shield first\n    if (shieldSystemRef.current.takeDamage(playerRef.current, damage)) {\n      return; // Shield absorbed damage\n    }\n    setGameStats(prev => {\n      const newHealth = prev.health - damage;\n      if (newHealth <= 0) {\n        // Player died\n        setGameState('gameOver');\n        if (prev.score > prev.highScore) {\n          localStorage.setItem('highScore', prev.score.toString());\n          return {\n            ...prev,\n            highScore: prev.score\n          };\n        }\n        return prev;\n      }\n      return {\n        ...prev,\n        health: newHealth\n      };\n    });\n\n    // Make player invulnerable briefly\n    playerRef.current.invulnerable = true;\n    playerRef.current.invulnerabilityTime = 2000;\n  };\n  const isColliding = (obj1, obj2) => {\n    return obj1.x < obj2.x + obj2.width && obj1.x + obj1.width > obj2.x && obj1.y < obj2.y + obj2.height && obj1.y + obj1.height > obj2.y;\n  };\n  const render = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw stars background\n    drawStars(ctx, canvas);\n\n    // Draw game objects\n    drawPlayer(ctx);\n    drawBullets(ctx);\n    enemySystemRef.current.drawEnemies(ctx);\n    bossSystemRef.current.drawBosses(ctx);\n    drawPowerUps(ctx);\n    wingFighterSystemRef.current.drawWingFighters(ctx);\n    shieldSystemRef.current.drawShield(ctx, playerRef.current);\n\n    // Draw UI\n    drawUI(ctx, canvas);\n    comboSystemRef.current.drawComboUI(ctx, canvas);\n    killStreakSystemRef.current.drawStreakUI(ctx, canvas);\n    achievementSystemRef.current.drawAchievementNotification(ctx, canvas);\n  };\n  const drawStars = (ctx, canvas) => {\n    ctx.fillStyle = '#ffffff';\n    for (let i = 0; i < 100; i++) {\n      const x = i * 7 % canvas.width;\n      const y = i * 11 % canvas.height;\n      ctx.fillRect(x, y, 1, 1);\n    }\n  };\n  const drawPlayer = ctx => {\n    const player = playerRef.current;\n    if (player.invulnerable) {\n      ctx.globalAlpha = 0.5;\n    }\n\n    // Draw player ship\n    ctx.fillStyle = '#00ff00';\n    ctx.fillRect(player.x, player.y, player.width, player.height);\n\n    // Draw player details\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(player.x + 5, player.y + 5, player.width - 10, player.height - 10);\n    ctx.globalAlpha = 1;\n  };\n  const drawBullets = useCallback(ctx => {\n    const bullets = bulletsRef.current;\n    bullets.forEach(bullet => {\n      ctx.fillStyle = bullet.color;\n      ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);\n    });\n  }, []);\n  const drawPowerUps = ctx => {\n    const powerUps = powerUpSystemRef.current.getPowerUps();\n    powerUps.forEach(powerUp => {\n      ctx.fillStyle = powerUp.color;\n      ctx.fillRect(powerUp.x, powerUp.y, powerUp.width, powerUp.height);\n\n      // Draw power-up icon\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(powerUp.icon, powerUp.x + powerUp.width / 2, powerUp.y + powerUp.height / 2 + 5);\n      ctx.textAlign = 'left';\n    });\n  };\n  const drawUI = useCallback((ctx, canvas) => {\n    // Score\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 24px Arial';\n    ctx.fillText(`Score: ${gameStats.score}`, 20, 40);\n\n    // High Score\n    ctx.font = '18px Arial';\n    ctx.fillText(`High Score: ${gameStats.highScore}`, 20, 70);\n\n    // Health\n    ctx.fillStyle = '#ff0000';\n    ctx.font = 'bold 20px Arial';\n    ctx.fillText(`Health: ${gameStats.health}`, 20, 100);\n\n    // Lives\n    ctx.fillStyle = '#ffff00';\n    ctx.fillText(`Lives: ${gameStats.lives}`, 20, 130);\n\n    // Difficulty\n    ctx.fillStyle = difficultySystemRef.current.getDifficultyColor();\n    ctx.fillText(`Difficulty: ${difficultySystemRef.current.getDifficultyName()}`, 20, 160);\n\n    // Game Time\n    ctx.fillStyle = '#00ffff';\n    ctx.fillText(`Time: ${Math.floor(gameStats.gameTime / 1000)}s`, 20, 190);\n  }, [gameStats]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      className: \"game-canvas\",\n      style: {\n        border: '2px solid #333',\n        background: '#000000'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 749,\n      columnNumber: 7\n    }, this), gameState === 'menu' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"game-title\",\n        children: \"\\uD83D\\uDE80 Kaden & Adelynn Space Adventures\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 760,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"game-subtitle\",\n        children: \"Epic Space Shooter Adventure\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"menu-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: startGame,\n          children: \"\\uD83C\\uDFAE Start Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => setGameState('settings'),\n          children: \"\\u2699\\uFE0F Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 762,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFAF Mission:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 771,\n            columnNumber: 16\n          }, this), \" Defend the galaxy from alien invaders!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 771,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDE80 Features:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 16\n          }, this), \" Power-ups, Boss Battles, Achievements & More!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFAE Controls:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 773,\n            columnNumber: 16\n          }, this), \" Arrow Keys / WASD to move, Space to shoot\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCF1 Mobile:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 774,\n            columnNumber: 16\n          }, this), \" Touch controls with haptic feedback\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 774,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"company-branding\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\xA9 2025 Bradley Virtual Solutions, LLC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 775,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 759,\n      columnNumber: 9\n    }, this), gameState === 'gameOver' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"game-over-title\",\n        children: \"\\uD83D\\uDCA5 Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83C\\uDFC6 Final Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 16\n          }, this), \" \", gameStats.score.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u2B50 High Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 16\n          }, this), \" \", gameStats.highScore.toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 785,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDC7E Enemies Destroyed:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 16\n          }, this), \" \", gameStats.enemiesDestroyed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 786,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDC79 Bosses Defeated:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 787,\n            columnNumber: 16\n          }, this), \" \", gameStats.bossesDefeated]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDD25 Max Combo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 16\n          }, this), \" \", gameStats.maxCombo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u2694\\uFE0F Max Kill Streak:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 16\n          }, this), \" \", gameStats.maxKillStreak]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\u23F0 Survival Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 16\n          }, this), \" \", Math.floor(gameStats.gameTime / 1000), \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: startGame,\n          children: \"\\uD83D\\uDD04 Play Again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"menu-button\",\n          onClick: () => setGameState('menu'),\n          children: \"\\uD83C\\uDFE0 Main Menu\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 792,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"company-branding\",\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\xA9 2025 Bradley Virtual Solutions, LLC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 43\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 800,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 781,\n      columnNumber: 9\n    }, this), gameState === 'playing' && mobileSystemRef.current.hasTouchSupport() && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"touch-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"touch-shoot-button\",\n        onTouchStart: e => {\n          e.preventDefault();\n          shoot();\n          mobileSystemRef.current.lightVibrate();\n        },\n        children: \"\\uD83D\\uDD2B SHOOT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 748,\n    columnNumber: 5\n  }, this);\n};\n_s(Game, \"zx11c3HnbVs+mF3zoIER4Vroixg=\");\n_c = Game;\nexport default Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","PowerUpSystem","WingFighterSystem","ShieldSystem","ComboSystem","KillStreakSystem","EnhancedBossSystem","EnhancedEnemySystem","EnhancedAchievementSystem","AudioSystem","DifficultySystem","MobileSystem","jsxDEV","_jsxDEV","Game","_s","canvasRef","gameLoopRef","lastTimeRef","gameState","setGameState","gameStats","setGameStats","score","highScore","parseInt","localStorage","getItem","lives","health","maxHealth","combo","killStreak","maxCombo","maxKillStreak","playerLevel","playerXP","bossesDefeated","enemiesDestroyed","powerUpsCollected","gameTime","difficulty","wingFighters","shieldsUsed","weaponsUsed","livesLost","shieldTime","rapidFireTime","doubleShotTime","rapidFireUses","doubleShotUses","shieldUses","speedBoostUses","healthBoostUses","scoreMultiplierUses","playerRef","x","y","width","height","speed","maxSpeed","invulnerable","invulnerabilityTime","level","xp","maxXP","hasShield","rapidFire","doubleShot","bulletsRef","enemiesRef","bossesRef","powerUpsRef","powerUpSystemRef","wingFighterSystemRef","shieldSystemRef","comboSystemRef","killStreakSystemRef","bossSystemRef","enemySystemRef","achievementSystemRef","audioSystemRef","difficultySystemRef","mobileSystemRef","keysRef","touchRef","startX","startY","currentX","currentY","canvas","current","ctx","getContext","getOptimalCanvasSize","optimizeForIOS","optimizeForAndroid","optimizeCanvasForDPI","setupEventListeners","cleanupEventListeners","window","addEventListener","handleKeyDown","handleKeyUp","hasTouchSupport","handleTouchStart","passive","handleTouchMove","handleTouchEnd","removeEventListener","event","key","preventDefault","shoot","touch","touches","clientX","clientY","changedTouches","rect","getBoundingClientRect","touchX","left","touchY","top","shootButton","document","querySelector","buttonRect","right","bottom","lightVibrate","deltaX","deltaY","Math","abs","max","min","player","bullets","push","type","color","damage","owner","wingBullets","shootWingFighters","playShootSound","startGame","prev","getPlayerHealth","getPlayerSpeed","resetCombo","resetStreak","requestAnimationFrame","gameLoop","currentTime","deltaTime","updateGame","render","enemies","bosses","powerUps","updatePlayer","updateCombo","updateStreak","updateShield","updateWingFighters","updateBullets","updateEnemies","updateBosses","updatePowerUps","spawnEnemies","spawnBosses","spawnPowerUps","checkCollisions","newAchievement","updateAchievements","displayAchievement","playAchievementSound","heavyVibrate","updateAchievementDisplay","i","length","bullet","splice","enemyBullets","bossBullets","newEnemy","spawnEnemy","newBoss","spawnBoss","newPowerUp","spawnPowerUp","j","enemy","isColliding","destroyed","damageEnemy","comboMultiplier","addKill","streakData","multiplier","playEnemyDestroySound","mediumVibrate","playEnemyHitSound","boss","playBossDestroySound","playBossHitSound","takeDamage","powerUp","collectPowerUp","playPowerUpSound","newHealth","setItem","toString","obj1","obj2","fillStyle","fillRect","drawStars","drawPlayer","drawBullets","drawEnemies","drawBosses","drawPowerUps","drawWingFighters","drawShield","drawUI","drawComboUI","drawStreakUI","drawAchievementNotification","globalAlpha","forEach","getPowerUps","font","textAlign","fillText","icon","getDifficultyColor","getDifficultyName","floor","className","children","ref","style","border","background","fileName","_jsxFileName","lineNumber","columnNumber","onClick","toLocaleString","onTouchStart","e","_c","$RefreshReg$"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Game.css';\n\n// Import all the new systems\nimport { PowerUpSystem } from '../systems/PowerUpSystem';\nimport { WingFighterSystem } from '../systems/WingFighterSystem';\nimport { ShieldSystem } from '../systems/ShieldSystem';\nimport { ComboSystem } from '../systems/ComboSystem';\nimport { KillStreakSystem } from '../systems/KillStreakSystem';\nimport { EnhancedBossSystem } from '../systems/EnhancedBossSystem';\nimport { EnhancedEnemySystem } from '../systems/EnhancedEnemySystem';\nimport { EnhancedAchievementSystem } from '../systems/EnhancedAchievementSystem';\nimport { AudioSystem } from '../systems/AudioSystem';\nimport { DifficultySystem } from '../systems/DifficultySystem';\nimport { MobileSystem } from '../systems/MobileSystem';\n\n// Import types\nimport { Player, Enemy, Bullet, PowerUp, Boss, Achievement, GameStats, GameState } from '../types/GameTypes';\n\nconst Game: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number | null>(null);\n  const lastTimeRef = useRef<number>(0);\n\n  // Game state\n  const [gameState, setGameState] = useState<GameState['state']>('menu');\n  const [gameStats, setGameStats] = useState<GameStats>({\n    score: 0,\n    highScore: parseInt(localStorage.getItem('highScore') || '0'),\n    lives: 3,\n    health: 50,\n    maxHealth: 50,\n    combo: 0,\n    killStreak: 0,\n    maxCombo: 0,\n    maxKillStreak: 0,\n    playerLevel: 1,\n    playerXP: 0,\n    bossesDefeated: 0,\n    enemiesDestroyed: 0,\n    powerUpsCollected: 0,\n    gameTime: 0,\n    difficulty: 'medium',\n    wingFighters: 0,\n    shieldsUsed: 0,\n    weaponsUsed: 0,\n    livesLost: 0,\n    shieldTime: 0,\n    rapidFireTime: 0,\n    doubleShotTime: 0,\n    rapidFireUses: 0,\n    doubleShotUses: 0,\n    shieldUses: 0,\n    speedBoostUses: 0,\n    healthBoostUses: 0,\n    scoreMultiplierUses: 0\n  });\n\n  // Player state\n  const playerRef = useRef<Player>({\n    x: 0,\n    y: 0,\n    width: 40,\n    height: 40,\n    speed: 4,\n    maxSpeed: 6,\n    health: 100,\n    maxHealth: 100,\n    invulnerable: false,\n    invulnerabilityTime: 0,\n    level: 1,\n    xp: 0,\n    maxXP: 100,\n    hasShield: false,\n    shieldTime: 0,\n    rapidFire: false,\n    rapidFireTime: 0,\n    doubleShot: false,\n    wingFighters: []\n  });\n\n  // Game objects\n  const bulletsRef = useRef<Bullet[]>([]);\n  const enemiesRef = useRef<Enemy[]>([]);\n  const bossesRef = useRef<Boss[]>([]);\n  const powerUpsRef = useRef<PowerUp[]>([]);\n\n  // Systems\n  const powerUpSystemRef = useRef<PowerUpSystem>(new PowerUpSystem());\n  const wingFighterSystemRef = useRef<WingFighterSystem>(new WingFighterSystem());\n  const shieldSystemRef = useRef<ShieldSystem>(new ShieldSystem());\n  const comboSystemRef = useRef<ComboSystem>(new ComboSystem());\n  const killStreakSystemRef = useRef<KillStreakSystem>(new KillStreakSystem());\n  const bossSystemRef = useRef<EnhancedBossSystem>(new EnhancedBossSystem());\n  const enemySystemRef = useRef<EnhancedEnemySystem>(new EnhancedEnemySystem());\n  const achievementSystemRef = useRef<EnhancedAchievementSystem>(new EnhancedAchievementSystem());\n  const audioSystemRef = useRef<AudioSystem>(new AudioSystem());\n  const difficultySystemRef = useRef<DifficultySystem>(new DifficultySystem());\n  const mobileSystemRef = useRef<MobileSystem>(new MobileSystem());\n\n  // Input state\n  const keysRef = useRef<{ [key: string]: boolean }>({});\n  const touchRef = useRef<{ startX: number; startY: number; currentX: number; currentY: number }>({\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0\n  });\n\n  // Initialize game\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const { width, height } = mobileSystemRef.current.getOptimalCanvasSize();\n    canvas.width = width;\n    canvas.height = height;\n\n    // Optimize for mobile\n    mobileSystemRef.current.optimizeForIOS();\n    mobileSystemRef.current.optimizeForAndroid();\n    mobileSystemRef.current.optimizeCanvasForDPI(canvas);\n\n    // Initialize player position\n    playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n    playerRef.current.y = canvas.height - 100;\n\n    // Set up event listeners\n    setupEventListeners();\n\n    return () => {\n      cleanupEventListeners();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const setupEventListeners = () => {\n    // Keyboard events\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Touch events\n    if (mobileSystemRef.current.hasTouchSupport()) {\n      const canvas = canvasRef.current;\n      if (canvas) {\n        canvas.addEventListener('touchstart', handleTouchStart, { passive: false });\n        canvas.addEventListener('touchmove', handleTouchMove, { passive: false });\n        canvas.addEventListener('touchend', handleTouchEnd, { passive: false });\n      }\n    }\n  };\n\n  const cleanupEventListeners = () => {\n    window.removeEventListener('keydown', handleKeyDown);\n    window.removeEventListener('keyup', handleKeyUp);\n\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n    }\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    keysRef.current[event.key] = true;\n    \n    if (event.key === ' ') {\n      event.preventDefault();\n      shoot();\n    }\n  };\n\n  const handleKeyUp = (event: KeyboardEvent) => {\n    keysRef.current[event.key] = false;\n  };\n\n  const handleTouchStart = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.startX = touch.clientX;\n    touchRef.current.startY = touch.clientY;\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n\n  const handleTouchMove = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n\n  const handleTouchEnd = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.changedTouches[0];\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const touchX = touch.clientX - rect.left;\n    const touchY = touch.clientY - rect.top;\n\n    // Check if touch is on shoot button\n    const shootButton = document.querySelector('.touch-shoot-button');\n    if (shootButton) {\n      const buttonRect = shootButton.getBoundingClientRect();\n      if (touchX >= buttonRect.left - rect.left && \n          touchX <= buttonRect.right - rect.left &&\n          touchY >= buttonRect.top - rect.top && \n          touchY <= buttonRect.bottom - rect.top) {\n        shoot();\n        mobileSystemRef.current.lightVibrate();\n        return;\n      }\n    }\n\n    // Handle touch movement for player control\n    const deltaX = touchRef.current.currentX - touchRef.current.startX;\n    const deltaY = touchRef.current.currentY - touchRef.current.startY;\n    \n    if (Math.abs(deltaX) > 10 || Math.abs(deltaY) > 10) {\n      // Move player based on touch movement\n      const canvas = canvasRef.current;\n      if (canvas) {\n        playerRef.current.x = Math.max(0, Math.min(canvas.width - playerRef.current.width, playerRef.current.x + deltaX * 0.5));\n        playerRef.current.y = Math.max(0, Math.min(canvas.height - playerRef.current.height, playerRef.current.y + deltaY * 0.5));\n      }\n    }\n  };\n\n  const shoot = useCallback(() => {\n    if (gameState !== 'playing') return;\n\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n\n    // Player bullet\n    bullets.push({\n      x: player.x + player.width / 2 - 2,\n      y: player.y,\n      width: 4,\n      height: 8,\n      speed: 6,\n      type: 'player_laser',\n      color: '#00ff00',\n      damage: 1,\n      owner: 'player'\n    });\n\n    // Double shot\n    if (player.doubleShot) {\n      bullets.push({\n        x: player.x + player.width / 2 - 2,\n        y: player.y,\n        width: 4,\n        height: 8,\n        speed: 6,\n        type: 'player_laser',\n        color: '#00ff00',\n        damage: 1,\n        owner: 'player'\n      });\n    }\n\n    // Wing fighter bullets\n    const wingBullets = wingFighterSystemRef.current.shootWingFighters(player);\n    bullets.push(...wingBullets);\n\n    audioSystemRef.current.playShootSound();\n  }, [gameState]);\n\n  const startGame = () => {\n    setGameState('playing');\n    setGameStats(prev => ({\n      ...prev,\n      score: 0,\n      lives: difficultySystemRef.current.getPlayerHealth() / 10,\n      health: difficultySystemRef.current.getPlayerHealth(),\n      maxHealth: difficultySystemRef.current.getPlayerHealth(),\n      gameTime: 0\n    }));\n\n    // Reset player\n    const canvas = canvasRef.current;\n    if (canvas) {\n      playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n      playerRef.current.y = canvas.height - 100;\n      playerRef.current.health = difficultySystemRef.current.getPlayerHealth();\n      playerRef.current.speed = difficultySystemRef.current.getPlayerSpeed();\n    }\n\n    // Clear game objects\n    bulletsRef.current = [];\n    enemiesRef.current = [];\n    bossesRef.current = [];\n    powerUpsRef.current = [];\n\n    // Reset systems\n    comboSystemRef.current.resetCombo();\n    killStreakSystemRef.current.resetStreak();\n    achievementSystemRef.current = new EnhancedAchievementSystem();\n\n    // Start game loop\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  };\n\n  const gameLoop = useCallback((currentTime: number) => {\n    if (gameState !== 'playing') return;\n\n    const deltaTime = currentTime - lastTimeRef.current;\n    lastTimeRef.current = currentTime;\n\n    updateGame(deltaTime);\n    render();\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  }, [gameState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateGame = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Update game time\n    setGameStats(prev => ({\n      ...prev,\n      gameTime: prev.gameTime + deltaTime\n    }));\n\n    // Update player\n    updatePlayer(deltaTime);\n\n    // Update systems\n    comboSystemRef.current.updateCombo(deltaTime);\n    killStreakSystemRef.current.updateStreak(deltaTime);\n    shieldSystemRef.current.updateShield(player, deltaTime);\n    wingFighterSystemRef.current.updateWingFighters(player, canvas);\n\n    // Update game objects\n    updateBullets(deltaTime);\n    updateEnemies(deltaTime);\n    updateBosses(deltaTime);\n    updatePowerUps(deltaTime);\n\n    // Spawn new objects\n    spawnEnemies();\n    spawnBosses();\n    spawnPowerUps();\n\n    // Check collisions\n    checkCollisions();\n\n    // Update achievements\n    const newAchievement = achievementSystemRef.current.updateAchievements(gameStats);\n    if (newAchievement) {\n      achievementSystemRef.current.displayAchievement(newAchievement);\n      audioSystemRef.current.playAchievementSound();\n      mobileSystemRef.current.heavyVibrate();\n    }\n\n    achievementSystemRef.current.updateAchievementDisplay();\n  };\n\n  const updatePlayer = (deltaTime: number) => {\n    const player = playerRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Handle input\n    if (keysRef.current['ArrowLeft'] || keysRef.current['a'] || keysRef.current['A']) {\n      player.x -= player.speed;\n    }\n    if (keysRef.current['ArrowRight'] || keysRef.current['d'] || keysRef.current['D']) {\n      player.x += player.speed;\n    }\n    if (keysRef.current['ArrowUp'] || keysRef.current['w'] || keysRef.current['W']) {\n      player.y -= player.speed;\n    }\n    if (keysRef.current['ArrowDown'] || keysRef.current['s'] || keysRef.current['S']) {\n      player.y += player.speed;\n    }\n\n    // Keep player within bounds\n    player.x = Math.max(0, Math.min(canvas.width - player.width, player.x));\n    player.y = Math.max(0, Math.min(canvas.height - player.height, player.y));\n\n    // Update invulnerability\n    if (player.invulnerable) {\n      player.invulnerabilityTime -= deltaTime;\n      if (player.invulnerabilityTime <= 0) {\n        player.invulnerable = false;\n      }\n    }\n\n    // Update rapid fire\n    if (player.rapidFire) {\n      player.rapidFireTime -= deltaTime;\n      if (player.rapidFireTime <= 0) {\n        player.rapidFire = false;\n      }\n    }\n  };\n\n  const updateBullets = (deltaTime: number) => {\n    const bullets = bulletsRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      bullet.y += bullet.speed * (bullet.owner === 'player' ? -1 : 1);\n\n      // Remove bullets that are off-screen\n      if (bullet.y < -bullet.height || bullet.y > canvas.height + bullet.height) {\n        bullets.splice(i, 1);\n      }\n    }\n  };\n\n  const updateEnemies = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const enemyBullets = enemySystemRef.current.updateEnemies(canvas, playerRef.current);\n    bulletsRef.current.push(...enemyBullets);\n  };\n\n  const updateBosses = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const bossBullets = bossSystemRef.current.updateBosses(canvas, playerRef.current);\n    bulletsRef.current.push(...bossBullets);\n  };\n\n  const updatePowerUps = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    powerUpSystemRef.current.updatePowerUps(canvas);\n  };\n\n  const spawnEnemies = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newEnemy = enemySystemRef.current.spawnEnemy(canvas, gameStats.score);\n    if (newEnemy) {\n      enemiesRef.current.push(newEnemy);\n    }\n  };\n\n  const spawnBosses = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newBoss = bossSystemRef.current.spawnBoss(canvas, gameStats.score);\n    if (newBoss) {\n      bossesRef.current.push(newBoss);\n    }\n  };\n\n  const spawnPowerUps = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newPowerUp = powerUpSystemRef.current.spawnPowerUp(canvas, gameStats.score);\n    if (newPowerUp) {\n      powerUpsRef.current.push(newPowerUp);\n    }\n  };\n\n  const checkCollisions = useCallback(() => {\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Bullet vs Enemy collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n\n      for (let j = enemies.length - 1; j >= 0; j--) {\n        const enemy = enemies[j];\n        if (isColliding(bullet, enemy)) {\n          bullets.splice(i, 1);\n          const destroyed = enemySystemRef.current.damageEnemy(j, bullet.damage);\n          \n          if (destroyed) {\n            enemies.splice(j, 1);\n            const comboMultiplier = comboSystemRef.current.addKill();\n            const streakData = killStreakSystemRef.current.addKill();\n            \n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + (100 * comboMultiplier * streakData.multiplier),\n              enemiesDestroyed: prev.enemiesDestroyed + 1\n            }));\n\n            audioSystemRef.current.playEnemyDestroySound();\n            mobileSystemRef.current.mediumVibrate();\n          } else {\n            audioSystemRef.current.playEnemyHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Bullet vs Boss collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n\n      for (let j = bosses.length - 1; j >= 0; j--) {\n        const boss = bosses[j];\n        if (isColliding(bullet, boss)) {\n          bullets.splice(i, 1);\n          boss.health -= bullet.damage;\n          \n          if (boss.health <= 0) {\n            bosses.splice(j, 1);\n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + 1000,\n              bossesDefeated: prev.bossesDefeated + 1\n            }));\n\n            audioSystemRef.current.playBossDestroySound();\n            mobileSystemRef.current.heavyVibrate();\n          } else {\n            audioSystemRef.current.playBossHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Player vs Enemy/Boss collisions\n    for (let i = enemies.length - 1; i >= 0; i--) {\n      const enemy = enemies[i];\n      if (isColliding(player, enemy)) {\n        enemies.splice(i, 1);\n        takeDamage(1);\n        break;\n      }\n    }\n\n    for (let i = bosses.length - 1; i >= 0; i--) {\n      const boss = bosses[i];\n      if (isColliding(player, boss)) {\n        takeDamage(2);\n        break;\n      }\n    }\n\n    // Player vs Enemy Bullet collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner === 'player') continue;\n\n      if (isColliding(player, bullet)) {\n        bullets.splice(i, 1);\n        takeDamage(bullet.damage);\n        break;\n      }\n    }\n\n    // Player vs PowerUp collisions\n    for (let i = powerUps.length - 1; i >= 0; i--) {\n      const powerUp = powerUps[i];\n      if (isColliding(player, powerUp)) {\n        powerUps.splice(i, 1);\n        powerUpSystemRef.current.collectPowerUp(powerUp, player);\n        \n        setGameStats(prev => ({\n          ...prev,\n          powerUpsCollected: prev.powerUpsCollected + 1\n        }));\n\n        audioSystemRef.current.playPowerUpSound();\n        mobileSystemRef.current.lightVibrate();\n        break;\n      }\n    }\n  }, [gameStats]);\n\n  const takeDamage = (damage: number) => {\n    if (playerRef.current.invulnerable) return;\n\n    // Check shield first\n    if (shieldSystemRef.current.takeDamage(playerRef.current, damage)) {\n      return; // Shield absorbed damage\n    }\n\n    setGameStats(prev => {\n      const newHealth = prev.health - damage;\n      if (newHealth <= 0) {\n        // Player died\n        setGameState('gameOver');\n        if (prev.score > prev.highScore) {\n          localStorage.setItem('highScore', prev.score.toString());\n          return { ...prev, highScore: prev.score };\n        }\n        return prev;\n      }\n      return { ...prev, health: newHealth };\n    });\n\n    // Make player invulnerable briefly\n    playerRef.current.invulnerable = true;\n    playerRef.current.invulnerabilityTime = 2000;\n  };\n\n  const isColliding = (obj1: any, obj2: any): boolean => {\n    return obj1.x < obj2.x + obj2.width &&\n           obj1.x + obj1.width > obj2.x &&\n           obj1.y < obj2.y + obj2.height &&\n           obj1.y + obj1.height > obj2.y;\n  };\n\n  const render = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw stars background\n    drawStars(ctx, canvas);\n\n    // Draw game objects\n    drawPlayer(ctx);\n    drawBullets(ctx);\n    enemySystemRef.current.drawEnemies(ctx);\n    bossSystemRef.current.drawBosses(ctx);\n    drawPowerUps(ctx);\n    wingFighterSystemRef.current.drawWingFighters(ctx);\n    shieldSystemRef.current.drawShield(ctx, playerRef.current);\n\n    // Draw UI\n    drawUI(ctx, canvas);\n    comboSystemRef.current.drawComboUI(ctx, canvas);\n    killStreakSystemRef.current.drawStreakUI(ctx, canvas);\n    achievementSystemRef.current.drawAchievementNotification(ctx, canvas);\n  };\n\n  const drawStars = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    ctx.fillStyle = '#ffffff';\n    for (let i = 0; i < 100; i++) {\n      const x = (i * 7) % canvas.width;\n      const y = (i * 11) % canvas.height;\n      ctx.fillRect(x, y, 1, 1);\n    }\n  };\n\n  const drawPlayer = (ctx: CanvasRenderingContext2D) => {\n    const player = playerRef.current;\n    \n    if (player.invulnerable) {\n      ctx.globalAlpha = 0.5;\n    }\n\n    // Draw player ship\n    ctx.fillStyle = '#00ff00';\n    ctx.fillRect(player.x, player.y, player.width, player.height);\n    \n    // Draw player details\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(player.x + 5, player.y + 5, player.width - 10, player.height - 10);\n\n    ctx.globalAlpha = 1;\n  };\n\n  const drawBullets = useCallback((ctx: CanvasRenderingContext2D) => {\n    const bullets = bulletsRef.current;\n    \n    bullets.forEach(bullet => {\n      ctx.fillStyle = bullet.color;\n      ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);\n    });\n  }, []);\n\n  const drawPowerUps = (ctx: CanvasRenderingContext2D) => {\n    const powerUps = powerUpSystemRef.current.getPowerUps();\n    \n    powerUps.forEach(powerUp => {\n      ctx.fillStyle = powerUp.color;\n      ctx.fillRect(powerUp.x, powerUp.y, powerUp.width, powerUp.height);\n      \n      // Draw power-up icon\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        powerUp.icon,\n        powerUp.x + powerUp.width / 2,\n        powerUp.y + powerUp.height / 2 + 5\n      );\n      ctx.textAlign = 'left';\n    });\n  };\n\n  const drawUI = useCallback((ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Score\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 24px Arial';\n    ctx.fillText(`Score: ${gameStats.score}`, 20, 40);\n    \n    // High Score\n    ctx.font = '18px Arial';\n    ctx.fillText(`High Score: ${gameStats.highScore}`, 20, 70);\n    \n    // Health\n    ctx.fillStyle = '#ff0000';\n    ctx.font = 'bold 20px Arial';\n    ctx.fillText(`Health: ${gameStats.health}`, 20, 100);\n    \n    // Lives\n    ctx.fillStyle = '#ffff00';\n    ctx.fillText(`Lives: ${gameStats.lives}`, 20, 130);\n    \n    // Difficulty\n    ctx.fillStyle = difficultySystemRef.current.getDifficultyColor();\n    ctx.fillText(`Difficulty: ${difficultySystemRef.current.getDifficultyName()}`, 20, 160);\n    \n    // Game Time\n    ctx.fillStyle = '#00ffff';\n    ctx.fillText(`Time: ${Math.floor(gameStats.gameTime / 1000)}s`, 20, 190);\n  }, [gameStats]);\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n        style={{\n          border: '2px solid #333',\n          background: '#000000'\n        }}\n      />\n      \n      {gameState === 'menu' && (\n        <div className=\"menu-overlay\">\n          <h1 className=\"game-title\">🚀 Kaden & Adelynn Space Adventures</h1>\n          <p className=\"game-subtitle\">Epic Space Shooter Adventure</p>\n          <div className=\"menu-buttons\">\n            <button className=\"menu-button\" onClick={startGame}>\n              🎮 Start Game\n            </button>\n            <button className=\"menu-button\" onClick={() => setGameState('settings')}>\n              ⚙️ Settings\n            </button>\n          </div>\n          <div className=\"game-info\">\n            <p><strong>🎯 Mission:</strong> Defend the galaxy from alien invaders!</p>\n            <p><strong>🚀 Features:</strong> Power-ups, Boss Battles, Achievements & More!</p>\n            <p><strong>🎮 Controls:</strong> Arrow Keys / WASD to move, Space to shoot</p>\n            <p><strong>📱 Mobile:</strong> Touch controls with haptic feedback</p>\n            <p className=\"company-branding\"><strong>© 2025 Bradley Virtual Solutions, LLC</strong></p>\n          </div>\n        </div>\n      )}\n      \n      {gameState === 'gameOver' && (\n        <div className=\"game-over-overlay\">\n          <h2 className=\"game-over-title\">💥 Game Over!</h2>\n          <div className=\"game-over-stats\">\n            <p><strong>🏆 Final Score:</strong> {gameStats.score.toLocaleString()}</p>\n            <p><strong>⭐ High Score:</strong> {gameStats.highScore.toLocaleString()}</p>\n            <p><strong>👾 Enemies Destroyed:</strong> {gameStats.enemiesDestroyed}</p>\n            <p><strong>👹 Bosses Defeated:</strong> {gameStats.bossesDefeated}</p>\n            <p><strong>🔥 Max Combo:</strong> {gameStats.maxCombo}</p>\n            <p><strong>⚔️ Max Kill Streak:</strong> {gameStats.maxKillStreak}</p>\n            <p><strong>⏰ Survival Time:</strong> {Math.floor(gameStats.gameTime / 1000)}s</p>\n          </div>\n          <div className=\"game-over-buttons\">\n            <button className=\"menu-button\" onClick={startGame}>\n              🔄 Play Again\n            </button>\n            <button className=\"menu-button\" onClick={() => setGameState('menu')}>\n              🏠 Main Menu\n            </button>\n          </div>\n          <p className=\"company-branding\"><strong>© 2025 Bradley Virtual Solutions, LLC</strong></p>\n        </div>\n      )}\n      \n      {gameState === 'playing' && mobileSystemRef.current.hasTouchSupport() && (\n        <div className=\"touch-controls\">\n          <button \n            className=\"touch-shoot-button\"\n            onTouchStart={(e) => {\n              e.preventDefault();\n              shoot();\n              mobileSystemRef.current.lightVibrate();\n            }}\n          >\n            🔫 SHOOT\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}