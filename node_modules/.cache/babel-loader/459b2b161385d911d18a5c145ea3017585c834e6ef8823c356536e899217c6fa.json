{"ast":null,"code":"export class ShieldSystem{constructor(){this.shieldActive=false;this.shieldTime=0;this.shieldEnergy=100;this.maxShieldEnergy=100;}activateShield(player){let duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:5000;player.hasShield=true;player.shieldTime=duration;this.shieldActive=true;this.shieldTime=duration;this.shieldEnergy=this.maxShieldEnergy;}updateShield(player,deltaTime){if(player.hasShield&&player.shieldTime>0){player.shieldTime-=deltaTime;this.shieldTime-=deltaTime;// Shield energy decreases over time\nthis.shieldEnergy-=deltaTime/1000*10;// 10 energy per second\nif(player.shieldTime<=0||this.shieldEnergy<=0){this.deactivateShield(player);return false;}return true;}return false;}deactivateShield(player){player.hasShield=false;player.shieldTime=0;this.shieldActive=false;this.shieldTime=0;this.shieldEnergy=0;}takeDamage(player,damage){if(player.hasShield&&this.shieldEnergy>0){this.shieldEnergy-=damage*10;// Shield absorbs damage\nif(this.shieldEnergy<=0){this.deactivateShield(player);return false;// Shield broken, no damage to player\n}return true;// Shield absorbed damage\n}return false;// No shield, damage goes to player\n}drawShield(ctx,player){if(player.hasShield&&this.shieldEnergy>0){const shieldRadius=30+this.shieldEnergy/this.maxShieldEnergy*10;const shieldAlpha=this.shieldEnergy/this.maxShieldEnergy*0.3;ctx.save();ctx.globalAlpha=shieldAlpha;ctx.strokeStyle='#00ffff';ctx.lineWidth=3;ctx.beginPath();ctx.arc(player.x+player.width/2,player.y+player.height/2,shieldRadius,0,Math.PI*2);ctx.stroke();// Shield energy bar\nconst barWidth=60;const barHeight=8;const barX=player.x+player.width/2-barWidth/2;const barY=player.y-20;// Background\nctx.fillStyle='#333333';ctx.fillRect(barX,barY,barWidth,barHeight);// Energy fill\nconst energyWidth=this.shieldEnergy/this.maxShieldEnergy*barWidth;ctx.fillStyle='#00ffff';ctx.fillRect(barX,barY,energyWidth,barHeight);ctx.restore();}}getShieldEnergy(){return this.shieldEnergy;}getMaxShieldEnergy(){return this.maxShieldEnergy;}isShieldActive(){return this.shieldActive;}rechargeShield(amount){if(this.shieldActive){this.shieldEnergy=Math.min(this.maxShieldEnergy,this.shieldEnergy+amount);}}}","map":{"version":3,"names":["ShieldSystem","constructor","shieldActive","shieldTime","shieldEnergy","maxShieldEnergy","activateShield","player","duration","arguments","length","undefined","hasShield","updateShield","deltaTime","deactivateShield","takeDamage","damage","drawShield","ctx","shieldRadius","shieldAlpha","save","globalAlpha","strokeStyle","lineWidth","beginPath","arc","x","width","y","height","Math","PI","stroke","barWidth","barHeight","barX","barY","fillStyle","fillRect","energyWidth","restore","getShieldEnergy","getMaxShieldEnergy","isShieldActive","rechargeShield","amount","min"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/systems/ShieldSystem.ts"],"sourcesContent":["import { Player } from '../types/GameTypes';\n\nexport class ShieldSystem {\n  private shieldActive: boolean = false;\n  private shieldTime: number = 0;\n  private shieldEnergy: number = 100;\n  private maxShieldEnergy: number = 100;\n\n  activateShield(player: Player, duration: number = 5000): void {\n    player.hasShield = true;\n    player.shieldTime = duration;\n    this.shieldActive = true;\n    this.shieldTime = duration;\n    this.shieldEnergy = this.maxShieldEnergy;\n  }\n\n  updateShield(player: Player, deltaTime: number): boolean {\n    if (player.hasShield && player.shieldTime > 0) {\n      player.shieldTime -= deltaTime;\n      this.shieldTime -= deltaTime;\n      \n      // Shield energy decreases over time\n      this.shieldEnergy -= (deltaTime / 1000) * 10; // 10 energy per second\n      \n      if (player.shieldTime <= 0 || this.shieldEnergy <= 0) {\n        this.deactivateShield(player);\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n  deactivateShield(player: Player): void {\n    player.hasShield = false;\n    player.shieldTime = 0;\n    this.shieldActive = false;\n    this.shieldTime = 0;\n    this.shieldEnergy = 0;\n  }\n\n  takeDamage(player: Player, damage: number): boolean {\n    if (player.hasShield && this.shieldEnergy > 0) {\n      this.shieldEnergy -= damage * 10; // Shield absorbs damage\n      \n      if (this.shieldEnergy <= 0) {\n        this.deactivateShield(player);\n        return false; // Shield broken, no damage to player\n      }\n      return true; // Shield absorbed damage\n    }\n    return false; // No shield, damage goes to player\n  }\n\n  drawShield(ctx: CanvasRenderingContext2D, player: Player): void {\n    if (player.hasShield && this.shieldEnergy > 0) {\n      const shieldRadius = 30 + (this.shieldEnergy / this.maxShieldEnergy) * 10;\n      const shieldAlpha = (this.shieldEnergy / this.maxShieldEnergy) * 0.3;\n      \n      ctx.save();\n      ctx.globalAlpha = shieldAlpha;\n      ctx.strokeStyle = '#00ffff';\n      ctx.lineWidth = 3;\n      ctx.beginPath();\n      ctx.arc(\n        player.x + player.width / 2,\n        player.y + player.height / 2,\n        shieldRadius,\n        0,\n        Math.PI * 2\n      );\n      ctx.stroke();\n      \n      // Shield energy bar\n      const barWidth = 60;\n      const barHeight = 8;\n      const barX = player.x + player.width / 2 - barWidth / 2;\n      const barY = player.y - 20;\n      \n      // Background\n      ctx.fillStyle = '#333333';\n      ctx.fillRect(barX, barY, barWidth, barHeight);\n      \n      // Energy fill\n      const energyWidth = (this.shieldEnergy / this.maxShieldEnergy) * barWidth;\n      ctx.fillStyle = '#00ffff';\n      ctx.fillRect(barX, barY, energyWidth, barHeight);\n      \n      ctx.restore();\n    }\n  }\n\n  getShieldEnergy(): number {\n    return this.shieldEnergy;\n  }\n\n  getMaxShieldEnergy(): number {\n    return this.maxShieldEnergy;\n  }\n\n  isShieldActive(): boolean {\n    return this.shieldActive;\n  }\n\n  rechargeShield(amount: number): void {\n    if (this.shieldActive) {\n      this.shieldEnergy = Math.min(this.maxShieldEnergy, this.shieldEnergy + amount);\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}