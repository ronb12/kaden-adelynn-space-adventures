{"ast":null,"code":"import _objectSpread from\"/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from'react';import'./Game.css';// Import all the new systems\nimport{PowerUpSystem}from'../systems/PowerUpSystem';import{WingFighterSystem}from'../systems/WingFighterSystem';import{ShieldSystem}from'../systems/ShieldSystem';import{ComboSystem}from'../systems/ComboSystem';import{KillStreakSystem}from'../systems/KillStreakSystem';import{EnhancedBossSystem}from'../systems/EnhancedBossSystem';import{EnhancedEnemySystem}from'../systems/EnhancedEnemySystem';import{EnhancedAchievementSystem}from'../systems/EnhancedAchievementSystem';import{AudioSystem}from'../systems/AudioSystem';import{DifficultySystem}from'../systems/DifficultySystem';import{MobileSystem}from'../systems/MobileSystem';// Import new features\nimport{Storyline}from'../story/Storyline';import{SpriteRenderer}from'../graphics/CharacterSprites';import SettingsPanel from'./SettingsPanel';import CharacterSelection from'./CharacterSelection';// Import types\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Game=()=>{var _Storyline$characters,_Storyline$characters2;const canvasRef=useRef(null);const gameLoopRef=useRef(null);const lastTimeRef=useRef(0);// Game state\nconst[gameState,setGameState]=useState('menu');const[selectedCharacter,setSelectedCharacter]=useState('kaden');const[showSettings,setShowSettings]=useState(false);const[showCharacterSelection,setShowCharacterSelection]=useState(false);const[currentStoryEvent,setCurrentStoryEvent]=useState('');const[gameSettings,setGameSettings]=useState({masterVolume:0.7,musicVolume:0.6,sfxVolume:0.8,particleEffects:true,screenShake:true,visualEffects:true,highQuality:true,difficulty:'medium',autoShoot:false,showFPS:false,showHitboxes:false,keyboardControls:true,touchControls:true,gamepadSupport:true,selectedCharacter:'kaden',fullscreen:false,vsync:true,frameRate:60});const[gameStats,setGameStats]=useState({score:0,highScore:parseInt(localStorage.getItem('highScore')||'0'),lives:3,health:50,maxHealth:50,combo:0,killStreak:0,maxCombo:0,maxKillStreak:0,playerLevel:1,playerXP:0,bossesDefeated:0,enemiesDestroyed:0,powerUpsCollected:0,gameTime:0,difficulty:'medium',wingFighters:0,shieldsUsed:0,weaponsUsed:0,livesLost:0,shieldTime:0,rapidFireTime:0,doubleShotTime:0,rapidFireUses:0,doubleShotUses:0,shieldUses:0,speedBoostUses:0,healthBoostUses:0,scoreMultiplierUses:0});// Player state\nconst playerRef=useRef({x:0,y:0,width:40,height:40,speed:4,maxSpeed:6,health:100,maxHealth:100,invulnerable:false,invulnerabilityTime:0,level:1,xp:0,maxXP:100,hasShield:false,shieldTime:0,rapidFire:false,rapidFireTime:0,doubleShot:false,wingFighters:[]});// Game objects\nconst bulletsRef=useRef([]);const enemiesRef=useRef([]);const bossesRef=useRef([]);const powerUpsRef=useRef([]);// Systems\nconst powerUpSystemRef=useRef(new PowerUpSystem());const wingFighterSystemRef=useRef(new WingFighterSystem());const shieldSystemRef=useRef(new ShieldSystem());const comboSystemRef=useRef(new ComboSystem());const killStreakSystemRef=useRef(new KillStreakSystem());const bossSystemRef=useRef(new EnhancedBossSystem());const enemySystemRef=useRef(new EnhancedEnemySystem());const achievementSystemRef=useRef(new EnhancedAchievementSystem());const audioSystemRef=useRef(new AudioSystem());const difficultySystemRef=useRef(new DifficultySystem());const mobileSystemRef=useRef(new MobileSystem());// Input state\nconst keysRef=useRef({});const touchRef=useRef({startX:0,startY:0,currentX:0,currentY:0});// Initialize game\nuseEffect(()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Set canvas size\nconst{width,height}=mobileSystemRef.current.getOptimalCanvasSize();canvas.width=width;canvas.height=height;// Optimize for mobile\nmobileSystemRef.current.optimizeForIOS();mobileSystemRef.current.optimizeForAndroid();mobileSystemRef.current.optimizeCanvasForDPI(canvas);// Initialize player position\nplayerRef.current.x=canvas.width/2-playerRef.current.width/2;playerRef.current.y=canvas.height-100;// Set up event listeners\nsetupEventListeners();return()=>{cleanupEventListeners();};},[]);// eslint-disable-line react-hooks/exhaustive-deps\nconst setupEventListeners=()=>{// Keyboard events\nwindow.addEventListener('keydown',handleKeyDown);window.addEventListener('keyup',handleKeyUp);// Touch events\nif(mobileSystemRef.current.hasTouchSupport()){const canvas=canvasRef.current;if(canvas){canvas.addEventListener('touchstart',handleTouchStart,{passive:false});canvas.addEventListener('touchmove',handleTouchMove,{passive:false});canvas.addEventListener('touchend',handleTouchEnd,{passive:false});}}};const cleanupEventListeners=()=>{window.removeEventListener('keydown',handleKeyDown);window.removeEventListener('keyup',handleKeyUp);const canvas=canvasRef.current;if(canvas){canvas.removeEventListener('touchstart',handleTouchStart);canvas.removeEventListener('touchmove',handleTouchMove);canvas.removeEventListener('touchend',handleTouchEnd);}};const handleKeyDown=event=>{keysRef.current[event.key]=true;if(event.key===' '){event.preventDefault();shoot();}};const handleKeyUp=event=>{keysRef.current[event.key]=false;};const handleTouchStart=event=>{event.preventDefault();const touch=event.touches[0];touchRef.current.startX=touch.clientX;touchRef.current.startY=touch.clientY;touchRef.current.currentX=touch.clientX;touchRef.current.currentY=touch.clientY;};const handleTouchMove=event=>{event.preventDefault();const touch=event.touches[0];touchRef.current.currentX=touch.clientX;touchRef.current.currentY=touch.clientY;};const handleTouchEnd=event=>{event.preventDefault();const touch=event.changedTouches[0];const canvas=canvasRef.current;if(!canvas)return;const rect=canvas.getBoundingClientRect();const touchX=touch.clientX-rect.left;const touchY=touch.clientY-rect.top;// Check if touch is on shoot button\nconst shootButton=document.querySelector('.touch-shoot-button');if(shootButton){const buttonRect=shootButton.getBoundingClientRect();if(touchX>=buttonRect.left-rect.left&&touchX<=buttonRect.right-rect.left&&touchY>=buttonRect.top-rect.top&&touchY<=buttonRect.bottom-rect.top){shoot();mobileSystemRef.current.lightVibrate();return;}}// Handle touch movement for player control\nconst deltaX=touchRef.current.currentX-touchRef.current.startX;const deltaY=touchRef.current.currentY-touchRef.current.startY;if(Math.abs(deltaX)>10||Math.abs(deltaY)>10){// Move player based on touch movement\nconst canvas=canvasRef.current;if(canvas){playerRef.current.x=Math.max(0,Math.min(canvas.width-playerRef.current.width,playerRef.current.x+deltaX*0.5));playerRef.current.y=Math.max(0,Math.min(canvas.height-playerRef.current.height,playerRef.current.y+deltaY*0.5));}}};const shoot=useCallback(()=>{if(gameState!=='playing')return;const player=playerRef.current;const bullets=bulletsRef.current;// Player bullet\nbullets.push({x:player.x+player.width/2-2,y:player.y,width:4,height:8,speed:6,type:'player_laser',color:'#00ff00',damage:1,owner:'player'});// Double shot\nif(player.doubleShot){bullets.push({x:player.x+player.width/2-2,y:player.y,width:4,height:8,speed:6,type:'player_laser',color:'#00ff00',damage:1,owner:'player'});}// Wing fighter bullets\nconst wingBullets=wingFighterSystemRef.current.shootWingFighters(player);bullets.push(...wingBullets);audioSystemRef.current.playShootSound();},[gameState]);const startGame=()=>{setGameState('playing');setGameStats(prev=>_objectSpread(_objectSpread({},prev),{},{score:0,lives:difficultySystemRef.current.getPlayerHealth()/10,health:difficultySystemRef.current.getPlayerHealth(),maxHealth:difficultySystemRef.current.getPlayerHealth(),gameTime:0}));// Reset player\nconst canvas=canvasRef.current;if(canvas){playerRef.current.x=canvas.width/2-playerRef.current.width/2;playerRef.current.y=canvas.height-100;playerRef.current.health=difficultySystemRef.current.getPlayerHealth();playerRef.current.speed=difficultySystemRef.current.getPlayerSpeed();}// Clear game objects\nbulletsRef.current=[];enemiesRef.current=[];bossesRef.current=[];powerUpsRef.current=[];// Reset systems\ncomboSystemRef.current.resetCombo();killStreakSystemRef.current.resetStreak();achievementSystemRef.current=new EnhancedAchievementSystem();// Start game loop\ngameLoopRef.current=requestAnimationFrame(gameLoop);};const gameLoop=useCallback(currentTime=>{if(gameState!=='playing')return;const deltaTime=currentTime-lastTimeRef.current;lastTimeRef.current=currentTime;updateGame(deltaTime);render();gameLoopRef.current=requestAnimationFrame(gameLoop);},[gameState]);// eslint-disable-line react-hooks/exhaustive-deps\nconst updateGame=deltaTime=>{const canvas=canvasRef.current;if(!canvas)return;const player=playerRef.current;const bullets=bulletsRef.current;const enemies=enemiesRef.current;const bosses=bossesRef.current;const powerUps=powerUpsRef.current;// Update game time\nsetGameStats(prev=>_objectSpread(_objectSpread({},prev),{},{gameTime:prev.gameTime+deltaTime}));// Update player\nupdatePlayer(deltaTime);// Update systems\ncomboSystemRef.current.updateCombo(deltaTime);killStreakSystemRef.current.updateStreak(deltaTime);shieldSystemRef.current.updateShield(player,deltaTime);wingFighterSystemRef.current.updateWingFighters(player,canvas);// Update game objects\nupdateBullets(deltaTime);updateEnemies(deltaTime);updateBosses(deltaTime);updatePowerUps(deltaTime);// Spawn new objects\nspawnEnemies();spawnBosses();spawnPowerUps();// Check collisions\ncheckCollisions();// Update achievements\nconst newAchievement=achievementSystemRef.current.updateAchievements(gameStats);if(newAchievement){achievementSystemRef.current.displayAchievement(newAchievement);audioSystemRef.current.playAchievementSound();mobileSystemRef.current.heavyVibrate();}achievementSystemRef.current.updateAchievementDisplay();};const updatePlayer=deltaTime=>{const player=playerRef.current;const canvas=canvasRef.current;if(!canvas)return;// Handle input\nif(keysRef.current['ArrowLeft']||keysRef.current['a']||keysRef.current['A']){player.x-=player.speed;}if(keysRef.current['ArrowRight']||keysRef.current['d']||keysRef.current['D']){player.x+=player.speed;}if(keysRef.current['ArrowUp']||keysRef.current['w']||keysRef.current['W']){player.y-=player.speed;}if(keysRef.current['ArrowDown']||keysRef.current['s']||keysRef.current['S']){player.y+=player.speed;}// Keep player within bounds\nplayer.x=Math.max(0,Math.min(canvas.width-player.width,player.x));player.y=Math.max(0,Math.min(canvas.height-player.height,player.y));// Update invulnerability\nif(player.invulnerable){player.invulnerabilityTime-=deltaTime;if(player.invulnerabilityTime<=0){player.invulnerable=false;}}// Update rapid fire\nif(player.rapidFire){player.rapidFireTime-=deltaTime;if(player.rapidFireTime<=0){player.rapidFire=false;}}};const updateBullets=deltaTime=>{const bullets=bulletsRef.current;const canvas=canvasRef.current;if(!canvas)return;for(let i=bullets.length-1;i>=0;i--){const bullet=bullets[i];bullet.y+=bullet.speed*(bullet.owner==='player'?-1:1);// Remove bullets that are off-screen\nif(bullet.y<-bullet.height||bullet.y>canvas.height+bullet.height){bullets.splice(i,1);}}};const updateEnemies=deltaTime=>{const canvas=canvasRef.current;if(!canvas)return;const enemyBullets=enemySystemRef.current.updateEnemies(canvas,playerRef.current);bulletsRef.current.push(...enemyBullets);};const updateBosses=deltaTime=>{const canvas=canvasRef.current;if(!canvas)return;const bossBullets=bossSystemRef.current.updateBosses(canvas,playerRef.current);bulletsRef.current.push(...bossBullets);};const updatePowerUps=deltaTime=>{const canvas=canvasRef.current;if(!canvas)return;powerUpSystemRef.current.updatePowerUps(canvas);};const spawnEnemies=()=>{const canvas=canvasRef.current;if(!canvas)return;const newEnemy=enemySystemRef.current.spawnEnemy(canvas,gameStats.score);if(newEnemy){enemiesRef.current.push(newEnemy);}};const spawnBosses=()=>{const canvas=canvasRef.current;if(!canvas)return;const newBoss=bossSystemRef.current.spawnBoss(canvas,gameStats.score);if(newBoss){bossesRef.current.push(newBoss);}};const spawnPowerUps=()=>{const canvas=canvasRef.current;if(!canvas)return;const newPowerUp=powerUpSystemRef.current.spawnPowerUp(canvas,gameStats.score);if(newPowerUp){powerUpsRef.current.push(newPowerUp);}};const checkCollisions=useCallback(()=>{const player=playerRef.current;const bullets=bulletsRef.current;const enemies=enemiesRef.current;const bosses=bossesRef.current;const powerUps=powerUpsRef.current;// Bullet vs Enemy collisions\nfor(let i=bullets.length-1;i>=0;i--){const bullet=bullets[i];if(bullet.owner!=='player')continue;for(let j=enemies.length-1;j>=0;j--){const enemy=enemies[j];if(isColliding(bullet,enemy)){bullets.splice(i,1);const destroyed=enemySystemRef.current.damageEnemy(j,bullet.damage);if(destroyed){enemies.splice(j,1);const comboMultiplier=comboSystemRef.current.addKill();const streakData=killStreakSystemRef.current.addKill();setGameStats(prev=>_objectSpread(_objectSpread({},prev),{},{score:prev.score+100*comboMultiplier*streakData.multiplier,enemiesDestroyed:prev.enemiesDestroyed+1}));audioSystemRef.current.playEnemyDestroySound();mobileSystemRef.current.mediumVibrate();}else{audioSystemRef.current.playEnemyHitSound();}break;}}}// Bullet vs Boss collisions\nfor(let i=bullets.length-1;i>=0;i--){const bullet=bullets[i];if(bullet.owner!=='player')continue;for(let j=bosses.length-1;j>=0;j--){const boss=bosses[j];if(isColliding(bullet,boss)){bullets.splice(i,1);boss.health-=bullet.damage;if(boss.health<=0){bosses.splice(j,1);setGameStats(prev=>_objectSpread(_objectSpread({},prev),{},{score:prev.score+1000,bossesDefeated:prev.bossesDefeated+1}));audioSystemRef.current.playBossDestroySound();mobileSystemRef.current.heavyVibrate();}else{audioSystemRef.current.playBossHitSound();}break;}}}// Player vs Enemy/Boss collisions\nfor(let i=enemies.length-1;i>=0;i--){const enemy=enemies[i];if(isColliding(player,enemy)){enemies.splice(i,1);takeDamage(1);break;}}for(let i=bosses.length-1;i>=0;i--){const boss=bosses[i];if(isColliding(player,boss)){takeDamage(2);break;}}// Player vs Enemy Bullet collisions\nfor(let i=bullets.length-1;i>=0;i--){const bullet=bullets[i];if(bullet.owner==='player')continue;if(isColliding(player,bullet)){bullets.splice(i,1);takeDamage(bullet.damage);break;}}// Player vs PowerUp collisions\nfor(let i=powerUps.length-1;i>=0;i--){const powerUp=powerUps[i];if(isColliding(player,powerUp)){powerUps.splice(i,1);powerUpSystemRef.current.collectPowerUp(powerUp,player);setGameStats(prev=>_objectSpread(_objectSpread({},prev),{},{powerUpsCollected:prev.powerUpsCollected+1}));audioSystemRef.current.playPowerUpSound();mobileSystemRef.current.lightVibrate();break;}}},[gameStats]);const takeDamage=damage=>{if(playerRef.current.invulnerable)return;// Check shield first\nif(shieldSystemRef.current.takeDamage(playerRef.current,damage)){return;// Shield absorbed damage\n}setGameStats(prev=>{const newHealth=prev.health-damage;if(newHealth<=0){// Player died\nsetGameState('gameOver');if(prev.score>prev.highScore){localStorage.setItem('highScore',prev.score.toString());return _objectSpread(_objectSpread({},prev),{},{highScore:prev.score});}return prev;}return _objectSpread(_objectSpread({},prev),{},{health:newHealth});});// Make player invulnerable briefly\nplayerRef.current.invulnerable=true;playerRef.current.invulnerabilityTime=2000;};const isColliding=(obj1,obj2)=>{return obj1.x<obj2.x+obj2.width&&obj1.x+obj1.width>obj2.x&&obj1.y<obj2.y+obj2.height&&obj1.y+obj1.height>obj2.y;};const render=()=>{const canvas=canvasRef.current;if(!canvas)return;const ctx=canvas.getContext('2d');if(!ctx)return;// Clear canvas\nctx.fillStyle='#000000';ctx.fillRect(0,0,canvas.width,canvas.height);// Draw stars background\ndrawStars(ctx,canvas);// Draw game objects\ndrawPlayer(ctx);drawBullets(ctx);enemySystemRef.current.drawEnemies(ctx);bossSystemRef.current.drawBosses(ctx);drawPowerUps(ctx);wingFighterSystemRef.current.drawWingFighters(ctx);shieldSystemRef.current.drawShield(ctx,playerRef.current);// Draw UI\ndrawUI(ctx,canvas);comboSystemRef.current.drawComboUI(ctx,canvas);killStreakSystemRef.current.drawStreakUI(ctx,canvas);achievementSystemRef.current.drawAchievementNotification(ctx,canvas);};const drawStars=(ctx,canvas)=>{ctx.fillStyle='#ffffff';for(let i=0;i<100;i++){const x=i*7%canvas.width;const y=i*11%canvas.height;ctx.fillRect(x,y,1,1);}};const drawPlayer=ctx=>{const player=playerRef.current;if(player.invulnerable){ctx.globalAlpha=0.5;}// Draw player ship\nctx.fillStyle='#00ff00';ctx.fillRect(player.x,player.y,player.width,player.height);// Draw player details\nctx.fillStyle='#ffffff';ctx.fillRect(player.x+5,player.y+5,player.width-10,player.height-10);ctx.globalAlpha=1;};const drawBullets=useCallback(ctx=>{const bullets=bulletsRef.current;bullets.forEach(bullet=>{ctx.fillStyle=bullet.color;ctx.fillRect(bullet.x,bullet.y,bullet.width,bullet.height);});},[]);const drawPowerUps=ctx=>{const powerUps=powerUpSystemRef.current.getPowerUps();powerUps.forEach(powerUp=>{ctx.fillStyle=powerUp.color;ctx.fillRect(powerUp.x,powerUp.y,powerUp.width,powerUp.height);// Draw power-up icon\nctx.fillStyle='#ffffff';ctx.font='16px Arial';ctx.textAlign='center';ctx.fillText(powerUp.icon,powerUp.x+powerUp.width/2,powerUp.y+powerUp.height/2+5);ctx.textAlign='left';});};const drawUI=useCallback((ctx,canvas)=>{// Score\nctx.fillStyle='#ffffff';ctx.font='bold 24px Arial';ctx.fillText(\"Score: \".concat(gameStats.score),20,40);// High Score\nctx.font='18px Arial';ctx.fillText(\"High Score: \".concat(gameStats.highScore),20,70);// Health\nctx.fillStyle='#ff0000';ctx.font='bold 20px Arial';ctx.fillText(\"Health: \".concat(gameStats.health),20,100);// Lives\nctx.fillStyle='#ffff00';ctx.fillText(\"Lives: \".concat(gameStats.lives),20,130);// Difficulty\nctx.fillStyle=difficultySystemRef.current.getDifficultyColor();ctx.fillText(\"Difficulty: \".concat(difficultySystemRef.current.getDifficultyName()),20,160);// Game Time\nctx.fillStyle='#00ffff';ctx.fillText(\"Time: \".concat(Math.floor(gameStats.gameTime/1000),\"s\"),20,190);},[gameStats]);return/*#__PURE__*/_jsxs(\"div\",{className:\"game-container\",children:[/*#__PURE__*/_jsx(\"canvas\",{ref:canvasRef,className:\"game-canvas\",style:{border:'2px solid #333',background:'#000000'}}),gameState==='menu'&&/*#__PURE__*/_jsxs(\"div\",{className:\"menu-overlay\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"game-title\",children:\"\\uD83D\\uDE80 Kaden & Adelynn Space Adventures\"}),/*#__PURE__*/_jsx(\"p\",{className:\"game-subtitle\",children:\"Epic Space Shooter Adventure\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"selected-character-display\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"character-icon-display\",children:/*#__PURE__*/_jsx(\"canvas\",{ref:canvas=>{if(canvas){const ctx=canvas.getContext('2d');canvas.width=80;canvas.height=80;SpriteRenderer.drawCharacter(ctx,selectedCharacter,24,24,'idle',0);}},width:\"80\",height:\"80\",className:\"main-menu-character-sprite\"})}),/*#__PURE__*/_jsxs(\"h3\",{children:[\"Selected Pilot: \",(_Storyline$characters=Storyline.characters[selectedCharacter])===null||_Storyline$characters===void 0?void 0:_Storyline$characters.name]}),/*#__PURE__*/_jsx(\"p\",{children:(_Storyline$characters2=Storyline.characters[selectedCharacter])===null||_Storyline$characters2===void 0?void 0:_Storyline$characters2.ship})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"menu-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:startGame,children:\"\\uD83C\\uDFAE Start Game\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>setShowCharacterSelection(true),children:\"\\uD83D\\uDC65 Choose Character\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>setShowSettings(true),children:\"\\u2699\\uFE0F Settings\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-info\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFAF Mission:\"}),\" Defend the galaxy from alien invaders!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDE80 Features:\"}),\" Power-ups, Boss Battles, Achievements & More!\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFAE Controls:\"}),\" Arrow Keys / WASD to move, Space to shoot\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDCF1 Mobile:\"}),\" Touch controls with haptic feedback\"]}),/*#__PURE__*/_jsx(\"p\",{className:\"company-branding\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\xA9 2025 Bradley Virtual Solutions, LLC\"})})]})]}),gameState==='gameOver'&&/*#__PURE__*/_jsxs(\"div\",{className:\"game-over-overlay\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"game-over-title\",children:\"\\uD83D\\uDCA5 Game Over!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-over-stats\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83C\\uDFC6 Final Score:\"}),\" \",gameStats.score.toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2B50 High Score:\"}),\" \",gameStats.highScore.toLocaleString()]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDC7E Enemies Destroyed:\"}),\" \",gameStats.enemiesDestroyed]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDC79 Bosses Defeated:\"}),\" \",gameStats.bossesDefeated]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uD83D\\uDD25 Max Combo:\"}),\" \",gameStats.maxCombo]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u2694\\uFE0F Max Kill Streak:\"}),\" \",gameStats.maxKillStreak]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\u23F0 Survival Time:\"}),\" \",Math.floor(gameStats.gameTime/1000),\"s\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"game-over-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:startGame,children:\"\\uD83D\\uDD04 Play Again\"}),/*#__PURE__*/_jsx(\"button\",{className:\"menu-button\",onClick:()=>setGameState('menu'),children:\"\\uD83C\\uDFE0 Main Menu\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"company-branding\",children:/*#__PURE__*/_jsx(\"strong\",{children:\"\\xA9 2025 Bradley Virtual Solutions, LLC\"})})]}),gameState==='playing'&&mobileSystemRef.current.hasTouchSupport()&&/*#__PURE__*/_jsx(\"div\",{className:\"touch-controls\",children:/*#__PURE__*/_jsx(\"button\",{className:\"touch-shoot-button\",onTouchStart:e=>{e.preventDefault();shoot();mobileSystemRef.current.lightVibrate();},children:\"\\uD83D\\uDD2B SHOOT\"})}),/*#__PURE__*/_jsx(SettingsPanel,{isOpen:showSettings,onClose:()=>setShowSettings(false),onSettingsChange:setGameSettings}),/*#__PURE__*/_jsx(CharacterSelection,{isOpen:showCharacterSelection,onClose:()=>setShowCharacterSelection(false),onCharacterSelect:setSelectedCharacter}),currentStoryEvent&&/*#__PURE__*/_jsx(\"div\",{className:\"story-event-display\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"story-event-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCD6 Story Event\"}),/*#__PURE__*/_jsx(\"p\",{children:currentStoryEvent}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setCurrentStoryEvent(''),children:\"Continue\"})]})})]});};export default Game;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","PowerUpSystem","WingFighterSystem","ShieldSystem","ComboSystem","KillStreakSystem","EnhancedBossSystem","EnhancedEnemySystem","EnhancedAchievementSystem","AudioSystem","DifficultySystem","MobileSystem","Storyline","SpriteRenderer","SettingsPanel","CharacterSelection","jsx","_jsx","jsxs","_jsxs","Game","_Storyline$characters","_Storyline$characters2","canvasRef","gameLoopRef","lastTimeRef","gameState","setGameState","selectedCharacter","setSelectedCharacter","showSettings","setShowSettings","showCharacterSelection","setShowCharacterSelection","currentStoryEvent","setCurrentStoryEvent","gameSettings","setGameSettings","masterVolume","musicVolume","sfxVolume","particleEffects","screenShake","visualEffects","highQuality","difficulty","autoShoot","showFPS","showHitboxes","keyboardControls","touchControls","gamepadSupport","fullscreen","vsync","frameRate","gameStats","setGameStats","score","highScore","parseInt","localStorage","getItem","lives","health","maxHealth","combo","killStreak","maxCombo","maxKillStreak","playerLevel","playerXP","bossesDefeated","enemiesDestroyed","powerUpsCollected","gameTime","wingFighters","shieldsUsed","weaponsUsed","livesLost","shieldTime","rapidFireTime","doubleShotTime","rapidFireUses","doubleShotUses","shieldUses","speedBoostUses","healthBoostUses","scoreMultiplierUses","playerRef","x","y","width","height","speed","maxSpeed","invulnerable","invulnerabilityTime","level","xp","maxXP","hasShield","rapidFire","doubleShot","bulletsRef","enemiesRef","bossesRef","powerUpsRef","powerUpSystemRef","wingFighterSystemRef","shieldSystemRef","comboSystemRef","killStreakSystemRef","bossSystemRef","enemySystemRef","achievementSystemRef","audioSystemRef","difficultySystemRef","mobileSystemRef","keysRef","touchRef","startX","startY","currentX","currentY","canvas","current","ctx","getContext","getOptimalCanvasSize","optimizeForIOS","optimizeForAndroid","optimizeCanvasForDPI","setupEventListeners","cleanupEventListeners","window","addEventListener","handleKeyDown","handleKeyUp","hasTouchSupport","handleTouchStart","passive","handleTouchMove","handleTouchEnd","removeEventListener","event","key","preventDefault","shoot","touch","touches","clientX","clientY","changedTouches","rect","getBoundingClientRect","touchX","left","touchY","top","shootButton","document","querySelector","buttonRect","right","bottom","lightVibrate","deltaX","deltaY","Math","abs","max","min","player","bullets","push","type","color","damage","owner","wingBullets","shootWingFighters","playShootSound","startGame","prev","_objectSpread","getPlayerHealth","getPlayerSpeed","resetCombo","resetStreak","requestAnimationFrame","gameLoop","currentTime","deltaTime","updateGame","render","enemies","bosses","powerUps","updatePlayer","updateCombo","updateStreak","updateShield","updateWingFighters","updateBullets","updateEnemies","updateBosses","updatePowerUps","spawnEnemies","spawnBosses","spawnPowerUps","checkCollisions","newAchievement","updateAchievements","displayAchievement","playAchievementSound","heavyVibrate","updateAchievementDisplay","i","length","bullet","splice","enemyBullets","bossBullets","newEnemy","spawnEnemy","newBoss","spawnBoss","newPowerUp","spawnPowerUp","j","enemy","isColliding","destroyed","damageEnemy","comboMultiplier","addKill","streakData","multiplier","playEnemyDestroySound","mediumVibrate","playEnemyHitSound","boss","playBossDestroySound","playBossHitSound","takeDamage","powerUp","collectPowerUp","playPowerUpSound","newHealth","setItem","toString","obj1","obj2","fillStyle","fillRect","drawStars","drawPlayer","drawBullets","drawEnemies","drawBosses","drawPowerUps","drawWingFighters","drawShield","drawUI","drawComboUI","drawStreakUI","drawAchievementNotification","globalAlpha","forEach","getPowerUps","font","textAlign","fillText","icon","concat","getDifficultyColor","getDifficultyName","floor","className","children","ref","style","border","background","drawCharacter","characters","name","ship","onClick","toLocaleString","onTouchStart","e","isOpen","onClose","onSettingsChange","onCharacterSelect"],"sources":["/Users/ronellbradley/Desktop/Kaden & Adelynn Space Adventures/src/components/Game.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport './Game.css';\n\n// Import all the new systems\nimport { PowerUpSystem } from '../systems/PowerUpSystem';\nimport { WingFighterSystem } from '../systems/WingFighterSystem';\nimport { ShieldSystem } from '../systems/ShieldSystem';\nimport { ComboSystem } from '../systems/ComboSystem';\nimport { KillStreakSystem } from '../systems/KillStreakSystem';\nimport { EnhancedBossSystem } from '../systems/EnhancedBossSystem';\nimport { EnhancedEnemySystem } from '../systems/EnhancedEnemySystem';\nimport { EnhancedAchievementSystem } from '../systems/EnhancedAchievementSystem';\nimport { AudioSystem } from '../systems/AudioSystem';\nimport { DifficultySystem } from '../systems/DifficultySystem';\nimport { MobileSystem } from '../systems/MobileSystem';\n\n// Import new features\nimport { Storyline } from '../story/Storyline';\nimport { ShipDesigns, ShipRenderer } from '../graphics/ShipDesigns';\nimport { CharacterSprites, SpriteRenderer } from '../graphics/CharacterSprites';\nimport { GameEnhancementSystem } from '../systems/GameEnhancementSystem';\nimport SettingsPanel from './SettingsPanel';\nimport CharacterSelection from './CharacterSelection';\n\n// Import types\nimport { Player, Enemy, Bullet, PowerUp, Boss, Achievement, GameStats, GameState } from '../types/GameTypes';\n\nconst Game: React.FC = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const gameLoopRef = useRef<number | null>(null);\n  const lastTimeRef = useRef<number>(0);\n\n  // Game state\n  const [gameState, setGameState] = useState<GameState['state']>('menu');\n  const [selectedCharacter, setSelectedCharacter] = useState<string>('kaden');\n  const [showSettings, setShowSettings] = useState<boolean>(false);\n  const [showCharacterSelection, setShowCharacterSelection] = useState<boolean>(false);\n  const [currentStoryEvent, setCurrentStoryEvent] = useState<string>('');\n  const [gameSettings, setGameSettings] = useState<any>({\n    masterVolume: 0.7,\n    musicVolume: 0.6,\n    sfxVolume: 0.8,\n    particleEffects: true,\n    screenShake: true,\n    visualEffects: true,\n    highQuality: true,\n    difficulty: 'medium',\n    autoShoot: false,\n    showFPS: false,\n    showHitboxes: false,\n    keyboardControls: true,\n    touchControls: true,\n    gamepadSupport: true,\n    selectedCharacter: 'kaden',\n    fullscreen: false,\n    vsync: true,\n    frameRate: 60\n  });\n  const [gameStats, setGameStats] = useState<GameStats>({\n    score: 0,\n    highScore: parseInt(localStorage.getItem('highScore') || '0'),\n    lives: 3,\n    health: 50,\n    maxHealth: 50,\n    combo: 0,\n    killStreak: 0,\n    maxCombo: 0,\n    maxKillStreak: 0,\n    playerLevel: 1,\n    playerXP: 0,\n    bossesDefeated: 0,\n    enemiesDestroyed: 0,\n    powerUpsCollected: 0,\n    gameTime: 0,\n    difficulty: 'medium',\n    wingFighters: 0,\n    shieldsUsed: 0,\n    weaponsUsed: 0,\n    livesLost: 0,\n    shieldTime: 0,\n    rapidFireTime: 0,\n    doubleShotTime: 0,\n    rapidFireUses: 0,\n    doubleShotUses: 0,\n    shieldUses: 0,\n    speedBoostUses: 0,\n    healthBoostUses: 0,\n    scoreMultiplierUses: 0\n  });\n\n  // Player state\n  const playerRef = useRef<Player>({\n    x: 0,\n    y: 0,\n    width: 40,\n    height: 40,\n    speed: 4,\n    maxSpeed: 6,\n    health: 100,\n    maxHealth: 100,\n    invulnerable: false,\n    invulnerabilityTime: 0,\n    level: 1,\n    xp: 0,\n    maxXP: 100,\n    hasShield: false,\n    shieldTime: 0,\n    rapidFire: false,\n    rapidFireTime: 0,\n    doubleShot: false,\n    wingFighters: []\n  });\n\n  // Game objects\n  const bulletsRef = useRef<Bullet[]>([]);\n  const enemiesRef = useRef<Enemy[]>([]);\n  const bossesRef = useRef<Boss[]>([]);\n  const powerUpsRef = useRef<PowerUp[]>([]);\n\n  // Systems\n  const powerUpSystemRef = useRef<PowerUpSystem>(new PowerUpSystem());\n  const wingFighterSystemRef = useRef<WingFighterSystem>(new WingFighterSystem());\n  const shieldSystemRef = useRef<ShieldSystem>(new ShieldSystem());\n  const comboSystemRef = useRef<ComboSystem>(new ComboSystem());\n  const killStreakSystemRef = useRef<KillStreakSystem>(new KillStreakSystem());\n  const bossSystemRef = useRef<EnhancedBossSystem>(new EnhancedBossSystem());\n  const enemySystemRef = useRef<EnhancedEnemySystem>(new EnhancedEnemySystem());\n  const achievementSystemRef = useRef<EnhancedAchievementSystem>(new EnhancedAchievementSystem());\n  const audioSystemRef = useRef<AudioSystem>(new AudioSystem());\n  const difficultySystemRef = useRef<DifficultySystem>(new DifficultySystem());\n  const mobileSystemRef = useRef<MobileSystem>(new MobileSystem());\n\n  // Input state\n  const keysRef = useRef<{ [key: string]: boolean }>({});\n  const touchRef = useRef<{ startX: number; startY: number; currentX: number; currentY: number }>({\n    startX: 0,\n    startY: 0,\n    currentX: 0,\n    currentY: 0\n  });\n\n  // Initialize game\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Set canvas size\n    const { width, height } = mobileSystemRef.current.getOptimalCanvasSize();\n    canvas.width = width;\n    canvas.height = height;\n\n    // Optimize for mobile\n    mobileSystemRef.current.optimizeForIOS();\n    mobileSystemRef.current.optimizeForAndroid();\n    mobileSystemRef.current.optimizeCanvasForDPI(canvas);\n\n    // Initialize player position\n    playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n    playerRef.current.y = canvas.height - 100;\n\n    // Set up event listeners\n    setupEventListeners();\n\n    return () => {\n      cleanupEventListeners();\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const setupEventListeners = () => {\n    // Keyboard events\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    // Touch events\n    if (mobileSystemRef.current.hasTouchSupport()) {\n      const canvas = canvasRef.current;\n      if (canvas) {\n        canvas.addEventListener('touchstart', handleTouchStart, { passive: false });\n        canvas.addEventListener('touchmove', handleTouchMove, { passive: false });\n        canvas.addEventListener('touchend', handleTouchEnd, { passive: false });\n      }\n    }\n  };\n\n  const cleanupEventListeners = () => {\n    window.removeEventListener('keydown', handleKeyDown);\n    window.removeEventListener('keyup', handleKeyUp);\n\n    const canvas = canvasRef.current;\n    if (canvas) {\n      canvas.removeEventListener('touchstart', handleTouchStart);\n      canvas.removeEventListener('touchmove', handleTouchMove);\n      canvas.removeEventListener('touchend', handleTouchEnd);\n    }\n  };\n\n  const handleKeyDown = (event: KeyboardEvent) => {\n    keysRef.current[event.key] = true;\n    \n    if (event.key === ' ') {\n      event.preventDefault();\n      shoot();\n    }\n  };\n\n  const handleKeyUp = (event: KeyboardEvent) => {\n    keysRef.current[event.key] = false;\n  };\n\n  const handleTouchStart = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.startX = touch.clientX;\n    touchRef.current.startY = touch.clientY;\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n\n  const handleTouchMove = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.touches[0];\n    touchRef.current.currentX = touch.clientX;\n    touchRef.current.currentY = touch.clientY;\n  };\n\n  const handleTouchEnd = (event: TouchEvent) => {\n    event.preventDefault();\n    const touch = event.changedTouches[0];\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const rect = canvas.getBoundingClientRect();\n    const touchX = touch.clientX - rect.left;\n    const touchY = touch.clientY - rect.top;\n\n    // Check if touch is on shoot button\n    const shootButton = document.querySelector('.touch-shoot-button');\n    if (shootButton) {\n      const buttonRect = shootButton.getBoundingClientRect();\n      if (touchX >= buttonRect.left - rect.left && \n          touchX <= buttonRect.right - rect.left &&\n          touchY >= buttonRect.top - rect.top && \n          touchY <= buttonRect.bottom - rect.top) {\n        shoot();\n        mobileSystemRef.current.lightVibrate();\n        return;\n      }\n    }\n\n    // Handle touch movement for player control\n    const deltaX = touchRef.current.currentX - touchRef.current.startX;\n    const deltaY = touchRef.current.currentY - touchRef.current.startY;\n    \n    if (Math.abs(deltaX) > 10 || Math.abs(deltaY) > 10) {\n      // Move player based on touch movement\n      const canvas = canvasRef.current;\n      if (canvas) {\n        playerRef.current.x = Math.max(0, Math.min(canvas.width - playerRef.current.width, playerRef.current.x + deltaX * 0.5));\n        playerRef.current.y = Math.max(0, Math.min(canvas.height - playerRef.current.height, playerRef.current.y + deltaY * 0.5));\n      }\n    }\n  };\n\n  const shoot = useCallback(() => {\n    if (gameState !== 'playing') return;\n\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n\n    // Player bullet\n    bullets.push({\n      x: player.x + player.width / 2 - 2,\n      y: player.y,\n      width: 4,\n      height: 8,\n      speed: 6,\n      type: 'player_laser',\n      color: '#00ff00',\n      damage: 1,\n      owner: 'player'\n    });\n\n    // Double shot\n    if (player.doubleShot) {\n      bullets.push({\n        x: player.x + player.width / 2 - 2,\n        y: player.y,\n        width: 4,\n        height: 8,\n        speed: 6,\n        type: 'player_laser',\n        color: '#00ff00',\n        damage: 1,\n        owner: 'player'\n      });\n    }\n\n    // Wing fighter bullets\n    const wingBullets = wingFighterSystemRef.current.shootWingFighters(player);\n    bullets.push(...wingBullets);\n\n    audioSystemRef.current.playShootSound();\n  }, [gameState]);\n\n  const startGame = () => {\n    setGameState('playing');\n    setGameStats(prev => ({\n      ...prev,\n      score: 0,\n      lives: difficultySystemRef.current.getPlayerHealth() / 10,\n      health: difficultySystemRef.current.getPlayerHealth(),\n      maxHealth: difficultySystemRef.current.getPlayerHealth(),\n      gameTime: 0\n    }));\n\n    // Reset player\n    const canvas = canvasRef.current;\n    if (canvas) {\n      playerRef.current.x = canvas.width / 2 - playerRef.current.width / 2;\n      playerRef.current.y = canvas.height - 100;\n      playerRef.current.health = difficultySystemRef.current.getPlayerHealth();\n      playerRef.current.speed = difficultySystemRef.current.getPlayerSpeed();\n    }\n\n    // Clear game objects\n    bulletsRef.current = [];\n    enemiesRef.current = [];\n    bossesRef.current = [];\n    powerUpsRef.current = [];\n\n    // Reset systems\n    comboSystemRef.current.resetCombo();\n    killStreakSystemRef.current.resetStreak();\n    achievementSystemRef.current = new EnhancedAchievementSystem();\n\n    // Start game loop\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  };\n\n  const gameLoop = useCallback((currentTime: number) => {\n    if (gameState !== 'playing') return;\n\n    const deltaTime = currentTime - lastTimeRef.current;\n    lastTimeRef.current = currentTime;\n\n    updateGame(deltaTime);\n    render();\n\n    gameLoopRef.current = requestAnimationFrame(gameLoop);\n  }, [gameState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const updateGame = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Update game time\n    setGameStats(prev => ({\n      ...prev,\n      gameTime: prev.gameTime + deltaTime\n    }));\n\n    // Update player\n    updatePlayer(deltaTime);\n\n    // Update systems\n    comboSystemRef.current.updateCombo(deltaTime);\n    killStreakSystemRef.current.updateStreak(deltaTime);\n    shieldSystemRef.current.updateShield(player, deltaTime);\n    wingFighterSystemRef.current.updateWingFighters(player, canvas);\n\n    // Update game objects\n    updateBullets(deltaTime);\n    updateEnemies(deltaTime);\n    updateBosses(deltaTime);\n    updatePowerUps(deltaTime);\n\n    // Spawn new objects\n    spawnEnemies();\n    spawnBosses();\n    spawnPowerUps();\n\n    // Check collisions\n    checkCollisions();\n\n    // Update achievements\n    const newAchievement = achievementSystemRef.current.updateAchievements(gameStats);\n    if (newAchievement) {\n      achievementSystemRef.current.displayAchievement(newAchievement);\n      audioSystemRef.current.playAchievementSound();\n      mobileSystemRef.current.heavyVibrate();\n    }\n\n    achievementSystemRef.current.updateAchievementDisplay();\n  };\n\n  const updatePlayer = (deltaTime: number) => {\n    const player = playerRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    // Handle input\n    if (keysRef.current['ArrowLeft'] || keysRef.current['a'] || keysRef.current['A']) {\n      player.x -= player.speed;\n    }\n    if (keysRef.current['ArrowRight'] || keysRef.current['d'] || keysRef.current['D']) {\n      player.x += player.speed;\n    }\n    if (keysRef.current['ArrowUp'] || keysRef.current['w'] || keysRef.current['W']) {\n      player.y -= player.speed;\n    }\n    if (keysRef.current['ArrowDown'] || keysRef.current['s'] || keysRef.current['S']) {\n      player.y += player.speed;\n    }\n\n    // Keep player within bounds\n    player.x = Math.max(0, Math.min(canvas.width - player.width, player.x));\n    player.y = Math.max(0, Math.min(canvas.height - player.height, player.y));\n\n    // Update invulnerability\n    if (player.invulnerable) {\n      player.invulnerabilityTime -= deltaTime;\n      if (player.invulnerabilityTime <= 0) {\n        player.invulnerable = false;\n      }\n    }\n\n    // Update rapid fire\n    if (player.rapidFire) {\n      player.rapidFireTime -= deltaTime;\n      if (player.rapidFireTime <= 0) {\n        player.rapidFire = false;\n      }\n    }\n  };\n\n  const updateBullets = (deltaTime: number) => {\n    const bullets = bulletsRef.current;\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      bullet.y += bullet.speed * (bullet.owner === 'player' ? -1 : 1);\n\n      // Remove bullets that are off-screen\n      if (bullet.y < -bullet.height || bullet.y > canvas.height + bullet.height) {\n        bullets.splice(i, 1);\n      }\n    }\n  };\n\n  const updateEnemies = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const enemyBullets = enemySystemRef.current.updateEnemies(canvas, playerRef.current);\n    bulletsRef.current.push(...enemyBullets);\n  };\n\n  const updateBosses = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const bossBullets = bossSystemRef.current.updateBosses(canvas, playerRef.current);\n    bulletsRef.current.push(...bossBullets);\n  };\n\n  const updatePowerUps = (deltaTime: number) => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    powerUpSystemRef.current.updatePowerUps(canvas);\n  };\n\n  const spawnEnemies = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newEnemy = enemySystemRef.current.spawnEnemy(canvas, gameStats.score);\n    if (newEnemy) {\n      enemiesRef.current.push(newEnemy);\n    }\n  };\n\n  const spawnBosses = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newBoss = bossSystemRef.current.spawnBoss(canvas, gameStats.score);\n    if (newBoss) {\n      bossesRef.current.push(newBoss);\n    }\n  };\n\n  const spawnPowerUps = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const newPowerUp = powerUpSystemRef.current.spawnPowerUp(canvas, gameStats.score);\n    if (newPowerUp) {\n      powerUpsRef.current.push(newPowerUp);\n    }\n  };\n\n  const checkCollisions = useCallback(() => {\n    const player = playerRef.current;\n    const bullets = bulletsRef.current;\n    const enemies = enemiesRef.current;\n    const bosses = bossesRef.current;\n    const powerUps = powerUpsRef.current;\n\n    // Bullet vs Enemy collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n\n      for (let j = enemies.length - 1; j >= 0; j--) {\n        const enemy = enemies[j];\n        if (isColliding(bullet, enemy)) {\n          bullets.splice(i, 1);\n          const destroyed = enemySystemRef.current.damageEnemy(j, bullet.damage);\n          \n          if (destroyed) {\n            enemies.splice(j, 1);\n            const comboMultiplier = comboSystemRef.current.addKill();\n            const streakData = killStreakSystemRef.current.addKill();\n            \n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + (100 * comboMultiplier * streakData.multiplier),\n              enemiesDestroyed: prev.enemiesDestroyed + 1\n            }));\n\n            audioSystemRef.current.playEnemyDestroySound();\n            mobileSystemRef.current.mediumVibrate();\n          } else {\n            audioSystemRef.current.playEnemyHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Bullet vs Boss collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner !== 'player') continue;\n\n      for (let j = bosses.length - 1; j >= 0; j--) {\n        const boss = bosses[j];\n        if (isColliding(bullet, boss)) {\n          bullets.splice(i, 1);\n          boss.health -= bullet.damage;\n          \n          if (boss.health <= 0) {\n            bosses.splice(j, 1);\n            setGameStats(prev => ({\n              ...prev,\n              score: prev.score + 1000,\n              bossesDefeated: prev.bossesDefeated + 1\n            }));\n\n            audioSystemRef.current.playBossDestroySound();\n            mobileSystemRef.current.heavyVibrate();\n          } else {\n            audioSystemRef.current.playBossHitSound();\n          }\n          break;\n        }\n      }\n    }\n\n    // Player vs Enemy/Boss collisions\n    for (let i = enemies.length - 1; i >= 0; i--) {\n      const enemy = enemies[i];\n      if (isColliding(player, enemy)) {\n        enemies.splice(i, 1);\n        takeDamage(1);\n        break;\n      }\n    }\n\n    for (let i = bosses.length - 1; i >= 0; i--) {\n      const boss = bosses[i];\n      if (isColliding(player, boss)) {\n        takeDamage(2);\n        break;\n      }\n    }\n\n    // Player vs Enemy Bullet collisions\n    for (let i = bullets.length - 1; i >= 0; i--) {\n      const bullet = bullets[i];\n      if (bullet.owner === 'player') continue;\n\n      if (isColliding(player, bullet)) {\n        bullets.splice(i, 1);\n        takeDamage(bullet.damage);\n        break;\n      }\n    }\n\n    // Player vs PowerUp collisions\n    for (let i = powerUps.length - 1; i >= 0; i--) {\n      const powerUp = powerUps[i];\n      if (isColliding(player, powerUp)) {\n        powerUps.splice(i, 1);\n        powerUpSystemRef.current.collectPowerUp(powerUp, player);\n        \n        setGameStats(prev => ({\n          ...prev,\n          powerUpsCollected: prev.powerUpsCollected + 1\n        }));\n\n        audioSystemRef.current.playPowerUpSound();\n        mobileSystemRef.current.lightVibrate();\n        break;\n      }\n    }\n  }, [gameStats]);\n\n  const takeDamage = (damage: number) => {\n    if (playerRef.current.invulnerable) return;\n\n    // Check shield first\n    if (shieldSystemRef.current.takeDamage(playerRef.current, damage)) {\n      return; // Shield absorbed damage\n    }\n\n    setGameStats(prev => {\n      const newHealth = prev.health - damage;\n      if (newHealth <= 0) {\n        // Player died\n        setGameState('gameOver');\n        if (prev.score > prev.highScore) {\n          localStorage.setItem('highScore', prev.score.toString());\n          return { ...prev, highScore: prev.score };\n        }\n        return prev;\n      }\n      return { ...prev, health: newHealth };\n    });\n\n    // Make player invulnerable briefly\n    playerRef.current.invulnerable = true;\n    playerRef.current.invulnerabilityTime = 2000;\n  };\n\n  const isColliding = (obj1: any, obj2: any): boolean => {\n    return obj1.x < obj2.x + obj2.width &&\n           obj1.x + obj1.width > obj2.x &&\n           obj1.y < obj2.y + obj2.height &&\n           obj1.y + obj1.height > obj2.y;\n  };\n\n  const render = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    // Clear canvas\n    ctx.fillStyle = '#000000';\n    ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n    // Draw stars background\n    drawStars(ctx, canvas);\n\n    // Draw game objects\n    drawPlayer(ctx);\n    drawBullets(ctx);\n    enemySystemRef.current.drawEnemies(ctx);\n    bossSystemRef.current.drawBosses(ctx);\n    drawPowerUps(ctx);\n    wingFighterSystemRef.current.drawWingFighters(ctx);\n    shieldSystemRef.current.drawShield(ctx, playerRef.current);\n\n    // Draw UI\n    drawUI(ctx, canvas);\n    comboSystemRef.current.drawComboUI(ctx, canvas);\n    killStreakSystemRef.current.drawStreakUI(ctx, canvas);\n    achievementSystemRef.current.drawAchievementNotification(ctx, canvas);\n  };\n\n  const drawStars = (ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    ctx.fillStyle = '#ffffff';\n    for (let i = 0; i < 100; i++) {\n      const x = (i * 7) % canvas.width;\n      const y = (i * 11) % canvas.height;\n      ctx.fillRect(x, y, 1, 1);\n    }\n  };\n\n  const drawPlayer = (ctx: CanvasRenderingContext2D) => {\n    const player = playerRef.current;\n    \n    if (player.invulnerable) {\n      ctx.globalAlpha = 0.5;\n    }\n\n    // Draw player ship\n    ctx.fillStyle = '#00ff00';\n    ctx.fillRect(player.x, player.y, player.width, player.height);\n    \n    // Draw player details\n    ctx.fillStyle = '#ffffff';\n    ctx.fillRect(player.x + 5, player.y + 5, player.width - 10, player.height - 10);\n\n    ctx.globalAlpha = 1;\n  };\n\n  const drawBullets = useCallback((ctx: CanvasRenderingContext2D) => {\n    const bullets = bulletsRef.current;\n    \n    bullets.forEach(bullet => {\n      ctx.fillStyle = bullet.color;\n      ctx.fillRect(bullet.x, bullet.y, bullet.width, bullet.height);\n    });\n  }, []);\n\n  const drawPowerUps = (ctx: CanvasRenderingContext2D) => {\n    const powerUps = powerUpSystemRef.current.getPowerUps();\n    \n    powerUps.forEach(powerUp => {\n      ctx.fillStyle = powerUp.color;\n      ctx.fillRect(powerUp.x, powerUp.y, powerUp.width, powerUp.height);\n      \n      // Draw power-up icon\n      ctx.fillStyle = '#ffffff';\n      ctx.font = '16px Arial';\n      ctx.textAlign = 'center';\n      ctx.fillText(\n        powerUp.icon,\n        powerUp.x + powerUp.width / 2,\n        powerUp.y + powerUp.height / 2 + 5\n      );\n      ctx.textAlign = 'left';\n    });\n  };\n\n  const drawUI = useCallback((ctx: CanvasRenderingContext2D, canvas: HTMLCanvasElement) => {\n    // Score\n    ctx.fillStyle = '#ffffff';\n    ctx.font = 'bold 24px Arial';\n    ctx.fillText(`Score: ${gameStats.score}`, 20, 40);\n    \n    // High Score\n    ctx.font = '18px Arial';\n    ctx.fillText(`High Score: ${gameStats.highScore}`, 20, 70);\n    \n    // Health\n    ctx.fillStyle = '#ff0000';\n    ctx.font = 'bold 20px Arial';\n    ctx.fillText(`Health: ${gameStats.health}`, 20, 100);\n    \n    // Lives\n    ctx.fillStyle = '#ffff00';\n    ctx.fillText(`Lives: ${gameStats.lives}`, 20, 130);\n    \n    // Difficulty\n    ctx.fillStyle = difficultySystemRef.current.getDifficultyColor();\n    ctx.fillText(`Difficulty: ${difficultySystemRef.current.getDifficultyName()}`, 20, 160);\n    \n    // Game Time\n    ctx.fillStyle = '#00ffff';\n    ctx.fillText(`Time: ${Math.floor(gameStats.gameTime / 1000)}s`, 20, 190);\n  }, [gameStats]);\n\n  return (\n    <div className=\"game-container\">\n      <canvas\n        ref={canvasRef}\n        className=\"game-canvas\"\n        style={{\n          border: '2px solid #333',\n          background: '#000000'\n        }}\n      />\n      \n      {gameState === 'menu' && (\n        <div className=\"menu-overlay\">\n          <h1 className=\"game-title\">🚀 Kaden & Adelynn Space Adventures</h1>\n          <p className=\"game-subtitle\">Epic Space Shooter Adventure</p>\n          \n          {/* Character Display */}\n          <div className=\"selected-character-display\">\n            <div className=\"character-icon-display\">\n              <canvas \n                ref={(canvas) => {\n                  if (canvas) {\n                    const ctx = canvas.getContext('2d');\n                    canvas.width = 80;\n                    canvas.height = 80;\n                    SpriteRenderer.drawCharacter(ctx, selectedCharacter, 24, 24, 'idle', 0);\n                  }\n                }}\n                width=\"80\" \n                height=\"80\"\n                className=\"main-menu-character-sprite\"\n              />\n            </div>\n            <h3>Selected Pilot: {Storyline.characters[selectedCharacter as keyof typeof Storyline.characters]?.name}</h3>\n            <p>{Storyline.characters[selectedCharacter as keyof typeof Storyline.characters]?.ship}</p>\n          </div>\n          \n          <div className=\"menu-buttons\">\n            <button className=\"menu-button\" onClick={startGame}>\n              🎮 Start Game\n            </button>\n            <button className=\"menu-button\" onClick={() => setShowCharacterSelection(true)}>\n              👥 Choose Character\n            </button>\n            <button className=\"menu-button\" onClick={() => setShowSettings(true)}>\n              ⚙️ Settings\n            </button>\n          </div>\n          \n          <div className=\"game-info\">\n            <p><strong>🎯 Mission:</strong> Defend the galaxy from alien invaders!</p>\n            <p><strong>🚀 Features:</strong> Power-ups, Boss Battles, Achievements & More!</p>\n            <p><strong>🎮 Controls:</strong> Arrow Keys / WASD to move, Space to shoot</p>\n            <p><strong>📱 Mobile:</strong> Touch controls with haptic feedback</p>\n            <p className=\"company-branding\"><strong>© 2025 Bradley Virtual Solutions, LLC</strong></p>\n          </div>\n        </div>\n      )}\n      \n      {gameState === 'gameOver' && (\n        <div className=\"game-over-overlay\">\n          <h2 className=\"game-over-title\">💥 Game Over!</h2>\n          <div className=\"game-over-stats\">\n            <p><strong>🏆 Final Score:</strong> {gameStats.score.toLocaleString()}</p>\n            <p><strong>⭐ High Score:</strong> {gameStats.highScore.toLocaleString()}</p>\n            <p><strong>👾 Enemies Destroyed:</strong> {gameStats.enemiesDestroyed}</p>\n            <p><strong>👹 Bosses Defeated:</strong> {gameStats.bossesDefeated}</p>\n            <p><strong>🔥 Max Combo:</strong> {gameStats.maxCombo}</p>\n            <p><strong>⚔️ Max Kill Streak:</strong> {gameStats.maxKillStreak}</p>\n            <p><strong>⏰ Survival Time:</strong> {Math.floor(gameStats.gameTime / 1000)}s</p>\n          </div>\n          <div className=\"game-over-buttons\">\n            <button className=\"menu-button\" onClick={startGame}>\n              🔄 Play Again\n            </button>\n            <button className=\"menu-button\" onClick={() => setGameState('menu')}>\n              🏠 Main Menu\n            </button>\n          </div>\n          <p className=\"company-branding\"><strong>© 2025 Bradley Virtual Solutions, LLC</strong></p>\n        </div>\n      )}\n      \n      {gameState === 'playing' && mobileSystemRef.current.hasTouchSupport() && (\n        <div className=\"touch-controls\">\n          <button \n            className=\"touch-shoot-button\"\n            onTouchStart={(e) => {\n              e.preventDefault();\n              shoot();\n              mobileSystemRef.current.lightVibrate();\n            }}\n          >\n            🔫 SHOOT\n          </button>\n        </div>\n      )}\n\n      {/* Settings Panel */}\n      <SettingsPanel \n        isOpen={showSettings}\n        onClose={() => setShowSettings(false)}\n        onSettingsChange={setGameSettings}\n      />\n\n      {/* Character Selection */}\n      <CharacterSelection \n        isOpen={showCharacterSelection}\n        onClose={() => setShowCharacterSelection(false)}\n        onCharacterSelect={setSelectedCharacter}\n      />\n\n      {/* Story Event Display */}\n      {currentStoryEvent && (\n        <div className=\"story-event-display\">\n          <div className=\"story-event-content\">\n            <h3>📖 Story Event</h3>\n            <p>{currentStoryEvent}</p>\n            <button onClick={() => setCurrentStoryEvent('')}>Continue</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Game;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}